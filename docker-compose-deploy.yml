services:
  app:
    image: public.ecr.aws/${ECR_REGISTRY_ALIAS}/${ECR_NAMESPACE}/${ECR_REPO_NAME}:${VERSION:-latest}
    volumes:
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
    environment:
      - VERSION=${VERSION:-latest}
      - TZ=Asia/Seoul
    pull_policy: always
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      in-memory-db:
        condition: service_started
    ports:
      - "${SPRING_PORT:-8080}:8080"
  db:
    image: mysql:8.3
    container_name: db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-secret}
      MYSQL_DATABASE: ${DB_NAME:-sample}
      MYSQL_USER: ${DB_USERNAME:-root}
      MYSQL_PASSWORD: ${DB_USER_PASSWORD:-secret}
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
      TZ: Asia/Seoul
    ports:
      - "${DB_PORT:-3306}:3306"
    volumes:
      - type: bind
        source: ${DB_MOUNT_PATH:-/db/mysql}
        target: /var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h ${DB_HOST:-127.0.0.1} -u ${DB_USERNAME:-root} -p${DB_USER_PASSWORD:-secret}"]
      interval: 10s
      timeout: 5s
      retries: 5

  in-memory-db:
    image: redis:7.2.4
    container_name: in-memory-db
    volumes:
      - type: bind
        source: ${REDIS_MOUNT_PATH:-/db/redis}
        target: /data
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:-secret}
    command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}" ]
    ports:
      - "${REDIS_PORT:-6379}:6379"