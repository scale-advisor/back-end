/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated;


import org.jooq.generated.tables.BatchJobExecution;
import org.jooq.generated.tables.BatchJobExecutionContext;
import org.jooq.generated.tables.BatchJobExecutionParams;
import org.jooq.generated.tables.BatchJobExecutionSeq;
import org.jooq.generated.tables.BatchJobInstance;
import org.jooq.generated.tables.BatchJobSeq;
import org.jooq.generated.tables.BatchStepExecution;
import org.jooq.generated.tables.BatchStepExecutionContext;
import org.jooq.generated.tables.BatchStepExecutionSeq;
import org.jooq.generated.tables.Project;
import org.jooq.generated.tables.ProjectFactor;
import org.jooq.generated.tables.ProjectLanguage;
import org.jooq.generated.tables.QrtzBlobTriggers;
import org.jooq.generated.tables.QrtzCalendars;
import org.jooq.generated.tables.QrtzCronTriggers;
import org.jooq.generated.tables.QrtzFiredTriggers;
import org.jooq.generated.tables.QrtzJobDetails;
import org.jooq.generated.tables.QrtzLocks;
import org.jooq.generated.tables.QrtzPausedTriggerGrps;
import org.jooq.generated.tables.QrtzSchedulerState;
import org.jooq.generated.tables.QrtzSimpleTriggers;
import org.jooq.generated.tables.QrtzSimpropTriggers;
import org.jooq.generated.tables.QrtzTriggers;
import org.jooq.generated.tables.User;
import org.jooq.generated.tables.UserProject;
import org.jooq.generated.tables.Version;


/**
 * Convenience access to all tables in scale_advisor.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Tables {

    /**
     * The table <code>scale_advisor.BATCH_JOB_EXECUTION</code>.
     */
    public static final BatchJobExecution BATCH_JOB_EXECUTION = BatchJobExecution.BATCH_JOB_EXECUTION;

    /**
     * The table <code>scale_advisor.BATCH_JOB_EXECUTION_CONTEXT</code>.
     */
    public static final BatchJobExecutionContext BATCH_JOB_EXECUTION_CONTEXT = BatchJobExecutionContext.BATCH_JOB_EXECUTION_CONTEXT;

    /**
     * The table <code>scale_advisor.BATCH_JOB_EXECUTION_PARAMS</code>.
     */
    public static final BatchJobExecutionParams BATCH_JOB_EXECUTION_PARAMS = BatchJobExecutionParams.BATCH_JOB_EXECUTION_PARAMS;

    /**
     * The table <code>scale_advisor.BATCH_JOB_EXECUTION_SEQ</code>.
     */
    public static final BatchJobExecutionSeq BATCH_JOB_EXECUTION_SEQ = BatchJobExecutionSeq.BATCH_JOB_EXECUTION_SEQ;

    /**
     * The table <code>scale_advisor.BATCH_JOB_INSTANCE</code>.
     */
    public static final BatchJobInstance BATCH_JOB_INSTANCE = BatchJobInstance.BATCH_JOB_INSTANCE;

    /**
     * The table <code>scale_advisor.BATCH_JOB_SEQ</code>.
     */
    public static final BatchJobSeq BATCH_JOB_SEQ = BatchJobSeq.BATCH_JOB_SEQ;

    /**
     * The table <code>scale_advisor.BATCH_STEP_EXECUTION</code>.
     */
    public static final BatchStepExecution BATCH_STEP_EXECUTION = BatchStepExecution.BATCH_STEP_EXECUTION;

    /**
     * The table <code>scale_advisor.BATCH_STEP_EXECUTION_CONTEXT</code>.
     */
    public static final BatchStepExecutionContext BATCH_STEP_EXECUTION_CONTEXT = BatchStepExecutionContext.BATCH_STEP_EXECUTION_CONTEXT;

    /**
     * The table <code>scale_advisor.BATCH_STEP_EXECUTION_SEQ</code>.
     */
    public static final BatchStepExecutionSeq BATCH_STEP_EXECUTION_SEQ = BatchStepExecutionSeq.BATCH_STEP_EXECUTION_SEQ;

    /**
     * The table <code>scale_advisor.PROJECT</code>.
     */
    public static final Project PROJECT = Project.PROJECT;

    /**
     * The table <code>scale_advisor.PROJECT_FACTOR</code>.
     */
    public static final ProjectFactor PROJECT_FACTOR = ProjectFactor.PROJECT_FACTOR;

    /**
     * The table <code>scale_advisor.PROJECT_LANGUAGE</code>.
     */
    public static final ProjectLanguage PROJECT_LANGUAGE = ProjectLanguage.PROJECT_LANGUAGE;

    /**
     * The table <code>scale_advisor.QRTZ_BLOB_TRIGGERS</code>.
     */
    public static final QrtzBlobTriggers QRTZ_BLOB_TRIGGERS = QrtzBlobTriggers.QRTZ_BLOB_TRIGGERS;

    /**
     * The table <code>scale_advisor.QRTZ_CALENDARS</code>.
     */
    public static final QrtzCalendars QRTZ_CALENDARS = QrtzCalendars.QRTZ_CALENDARS;

    /**
     * The table <code>scale_advisor.QRTZ_CRON_TRIGGERS</code>.
     */
    public static final QrtzCronTriggers QRTZ_CRON_TRIGGERS = QrtzCronTriggers.QRTZ_CRON_TRIGGERS;

    /**
     * The table <code>scale_advisor.QRTZ_FIRED_TRIGGERS</code>.
     */
    public static final QrtzFiredTriggers QRTZ_FIRED_TRIGGERS = QrtzFiredTriggers.QRTZ_FIRED_TRIGGERS;

    /**
     * The table <code>scale_advisor.QRTZ_JOB_DETAILS</code>.
     */
    public static final QrtzJobDetails QRTZ_JOB_DETAILS = QrtzJobDetails.QRTZ_JOB_DETAILS;

    /**
     * The table <code>scale_advisor.QRTZ_LOCKS</code>.
     */
    public static final QrtzLocks QRTZ_LOCKS = QrtzLocks.QRTZ_LOCKS;

    /**
     * The table <code>scale_advisor.QRTZ_PAUSED_TRIGGER_GRPS</code>.
     */
    public static final QrtzPausedTriggerGrps QRTZ_PAUSED_TRIGGER_GRPS = QrtzPausedTriggerGrps.QRTZ_PAUSED_TRIGGER_GRPS;

    /**
     * The table <code>scale_advisor.QRTZ_SCHEDULER_STATE</code>.
     */
    public static final QrtzSchedulerState QRTZ_SCHEDULER_STATE = QrtzSchedulerState.QRTZ_SCHEDULER_STATE;

    /**
     * The table <code>scale_advisor.QRTZ_SIMPLE_TRIGGERS</code>.
     */
    public static final QrtzSimpleTriggers QRTZ_SIMPLE_TRIGGERS = QrtzSimpleTriggers.QRTZ_SIMPLE_TRIGGERS;

    /**
     * The table <code>scale_advisor.QRTZ_SIMPROP_TRIGGERS</code>.
     */
    public static final QrtzSimpropTriggers QRTZ_SIMPROP_TRIGGERS = QrtzSimpropTriggers.QRTZ_SIMPROP_TRIGGERS;

    /**
     * The table <code>scale_advisor.QRTZ_TRIGGERS</code>.
     */
    public static final QrtzTriggers QRTZ_TRIGGERS = QrtzTriggers.QRTZ_TRIGGERS;

    /**
     * The table <code>scale_advisor.USER</code>.
     */
    public static final User USER = User.USER;

    /**
     * The table <code>scale_advisor.USER_PROJECT</code>.
     */
    public static final UserProject USER_PROJECT = UserProject.USER_PROJECT;

    /**
     * The table <code>scale_advisor.VERSION</code>.
     */
    public static final Version VERSION = Version.VERSION;
}
