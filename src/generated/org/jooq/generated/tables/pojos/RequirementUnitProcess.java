/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RequirementUnitProcess implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long requirementUnitProcessId;
    private Long requirementId;
    private Long unitProcessId;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;

    public RequirementUnitProcess() {}

    public RequirementUnitProcess(RequirementUnitProcess value) {
        this.requirementUnitProcessId = value.requirementUnitProcessId;
        this.requirementId = value.requirementId;
        this.unitProcessId = value.unitProcessId;
        this.createdAt = value.createdAt;
        this.updatedAt = value.updatedAt;
    }

    public RequirementUnitProcess(
        Long requirementUnitProcessId,
        Long requirementId,
        Long unitProcessId,
        LocalDateTime createdAt,
        LocalDateTime updatedAt
    ) {
        this.requirementUnitProcessId = requirementUnitProcessId;
        this.requirementId = requirementId;
        this.unitProcessId = unitProcessId;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for
     * <code>scale_advisor.REQUIREMENT_UNIT_PROCESS.REQUIREMENT_UNIT_PROCESS_ID</code>.
     */
    public Long getRequirementUnitProcessId() {
        return this.requirementUnitProcessId;
    }

    /**
     * Setter for
     * <code>scale_advisor.REQUIREMENT_UNIT_PROCESS.REQUIREMENT_UNIT_PROCESS_ID</code>.
     */
    public RequirementUnitProcess setRequirementUnitProcessId(Long requirementUnitProcessId) {
        this.requirementUnitProcessId = requirementUnitProcessId;
        return this;
    }

    /**
     * Getter for
     * <code>scale_advisor.REQUIREMENT_UNIT_PROCESS.REQUIREMENT_ID</code>.
     */
    public Long getRequirementId() {
        return this.requirementId;
    }

    /**
     * Setter for
     * <code>scale_advisor.REQUIREMENT_UNIT_PROCESS.REQUIREMENT_ID</code>.
     */
    public RequirementUnitProcess setRequirementId(Long requirementId) {
        this.requirementId = requirementId;
        return this;
    }

    /**
     * Getter for
     * <code>scale_advisor.REQUIREMENT_UNIT_PROCESS.UNIT_PROCESS_ID</code>.
     */
    public Long getUnitProcessId() {
        return this.unitProcessId;
    }

    /**
     * Setter for
     * <code>scale_advisor.REQUIREMENT_UNIT_PROCESS.UNIT_PROCESS_ID</code>.
     */
    public RequirementUnitProcess setUnitProcessId(Long unitProcessId) {
        this.unitProcessId = unitProcessId;
        return this;
    }

    /**
     * Getter for
     * <code>scale_advisor.REQUIREMENT_UNIT_PROCESS.CREATED_AT</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for
     * <code>scale_advisor.REQUIREMENT_UNIT_PROCESS.CREATED_AT</code>.
     */
    public RequirementUnitProcess setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Getter for
     * <code>scale_advisor.REQUIREMENT_UNIT_PROCESS.UPDATED_AT</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for
     * <code>scale_advisor.REQUIREMENT_UNIT_PROCESS.UPDATED_AT</code>.
     */
    public RequirementUnitProcess setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final RequirementUnitProcess other = (RequirementUnitProcess) obj;
        if (this.requirementUnitProcessId == null) {
            if (other.requirementUnitProcessId != null)
                return false;
        }
        else if (!this.requirementUnitProcessId.equals(other.requirementUnitProcessId))
            return false;
        if (this.requirementId == null) {
            if (other.requirementId != null)
                return false;
        }
        else if (!this.requirementId.equals(other.requirementId))
            return false;
        if (this.unitProcessId == null) {
            if (other.unitProcessId != null)
                return false;
        }
        else if (!this.unitProcessId.equals(other.unitProcessId))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.requirementUnitProcessId == null) ? 0 : this.requirementUnitProcessId.hashCode());
        result = prime * result + ((this.requirementId == null) ? 0 : this.requirementId.hashCode());
        result = prime * result + ((this.unitProcessId == null) ? 0 : this.unitProcessId.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("RequirementUnitProcess (");

        sb.append(requirementUnitProcessId);
        sb.append(", ").append(requirementId);
        sb.append(", ").append(unitProcessId);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(updatedAt);

        sb.append(")");
        return sb.toString();
    }
}
