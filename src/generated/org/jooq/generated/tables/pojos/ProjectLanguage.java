/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProjectLanguage implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long projectLanguageId;
    private Long projectId;
    private String language;
    private Integer rate;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;

    public ProjectLanguage() {}

    public ProjectLanguage(ProjectLanguage value) {
        this.projectLanguageId = value.projectLanguageId;
        this.projectId = value.projectId;
        this.language = value.language;
        this.rate = value.rate;
        this.createdAt = value.createdAt;
        this.updatedAt = value.updatedAt;
    }

    public ProjectLanguage(
        Long projectLanguageId,
        Long projectId,
        String language,
        Integer rate,
        LocalDateTime createdAt,
        LocalDateTime updatedAt
    ) {
        this.projectLanguageId = projectLanguageId;
        this.projectId = projectId;
        this.language = language;
        this.rate = rate;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for
     * <code>scale_advisor.PROJECT_LANGUAGE.PROJECT_LANGUAGE_ID</code>.
     */
    public Long getProjectLanguageId() {
        return this.projectLanguageId;
    }

    /**
     * Setter for
     * <code>scale_advisor.PROJECT_LANGUAGE.PROJECT_LANGUAGE_ID</code>.
     */
    public ProjectLanguage setProjectLanguageId(Long projectLanguageId) {
        this.projectLanguageId = projectLanguageId;
        return this;
    }

    /**
     * Getter for <code>scale_advisor.PROJECT_LANGUAGE.PROJECT_ID</code>.
     */
    public Long getProjectId() {
        return this.projectId;
    }

    /**
     * Setter for <code>scale_advisor.PROJECT_LANGUAGE.PROJECT_ID</code>.
     */
    public ProjectLanguage setProjectId(Long projectId) {
        this.projectId = projectId;
        return this;
    }

    /**
     * Getter for <code>scale_advisor.PROJECT_LANGUAGE.LANGUAGE</code>.
     */
    public String getLanguage() {
        return this.language;
    }

    /**
     * Setter for <code>scale_advisor.PROJECT_LANGUAGE.LANGUAGE</code>.
     */
    public ProjectLanguage setLanguage(String language) {
        this.language = language;
        return this;
    }

    /**
     * Getter for <code>scale_advisor.PROJECT_LANGUAGE.RATE</code>.
     */
    public Integer getRate() {
        return this.rate;
    }

    /**
     * Setter for <code>scale_advisor.PROJECT_LANGUAGE.RATE</code>.
     */
    public ProjectLanguage setRate(Integer rate) {
        this.rate = rate;
        return this;
    }

    /**
     * Getter for <code>scale_advisor.PROJECT_LANGUAGE.CREATED_AT</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>scale_advisor.PROJECT_LANGUAGE.CREATED_AT</code>.
     */
    public ProjectLanguage setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Getter for <code>scale_advisor.PROJECT_LANGUAGE.UPDATED_AT</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>scale_advisor.PROJECT_LANGUAGE.UPDATED_AT</code>.
     */
    public ProjectLanguage setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ProjectLanguage other = (ProjectLanguage) obj;
        if (this.projectLanguageId == null) {
            if (other.projectLanguageId != null)
                return false;
        }
        else if (!this.projectLanguageId.equals(other.projectLanguageId))
            return false;
        if (this.projectId == null) {
            if (other.projectId != null)
                return false;
        }
        else if (!this.projectId.equals(other.projectId))
            return false;
        if (this.language == null) {
            if (other.language != null)
                return false;
        }
        else if (!this.language.equals(other.language))
            return false;
        if (this.rate == null) {
            if (other.rate != null)
                return false;
        }
        else if (!this.rate.equals(other.rate))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.projectLanguageId == null) ? 0 : this.projectLanguageId.hashCode());
        result = prime * result + ((this.projectId == null) ? 0 : this.projectId.hashCode());
        result = prime * result + ((this.language == null) ? 0 : this.language.hashCode());
        result = prime * result + ((this.rate == null) ? 0 : this.rate.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ProjectLanguage (");

        sb.append(projectLanguageId);
        sb.append(", ").append(projectId);
        sb.append(", ").append(language);
        sb.append(", ").append(rate);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(updatedAt);

        sb.append(")");
        return sb.toString();
    }
}
