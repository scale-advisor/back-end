/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProjectMember implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long userId;
    private Long projectId;
    private String state;
    private String role;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;

    public ProjectMember() {}

    public ProjectMember(ProjectMember value) {
        this.userId = value.userId;
        this.projectId = value.projectId;
        this.state = value.state;
        this.role = value.role;
        this.createdAt = value.createdAt;
        this.updatedAt = value.updatedAt;
    }

    public ProjectMember(
        Long userId,
        Long projectId,
        String state,
        String role,
        LocalDateTime createdAt,
        LocalDateTime updatedAt
    ) {
        this.userId = userId;
        this.projectId = projectId;
        this.state = state;
        this.role = role;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for <code>scale_advisor.PROJECT_MEMBER.USER_ID</code>.
     */
    public Long getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>scale_advisor.PROJECT_MEMBER.USER_ID</code>.
     */
    public ProjectMember setUserId(Long userId) {
        this.userId = userId;
        return this;
    }

    /**
     * Getter for <code>scale_advisor.PROJECT_MEMBER.PROJECT_ID</code>.
     */
    public Long getProjectId() {
        return this.projectId;
    }

    /**
     * Setter for <code>scale_advisor.PROJECT_MEMBER.PROJECT_ID</code>.
     */
    public ProjectMember setProjectId(Long projectId) {
        this.projectId = projectId;
        return this;
    }

    /**
     * Getter for <code>scale_advisor.PROJECT_MEMBER.STATE</code>.
     */
    public String getState() {
        return this.state;
    }

    /**
     * Setter for <code>scale_advisor.PROJECT_MEMBER.STATE</code>.
     */
    public ProjectMember setState(String state) {
        this.state = state;
        return this;
    }

    /**
     * Getter for <code>scale_advisor.PROJECT_MEMBER.ROLE</code>.
     */
    public String getRole() {
        return this.role;
    }

    /**
     * Setter for <code>scale_advisor.PROJECT_MEMBER.ROLE</code>.
     */
    public ProjectMember setRole(String role) {
        this.role = role;
        return this;
    }

    /**
     * Getter for <code>scale_advisor.PROJECT_MEMBER.CREATED_AT</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>scale_advisor.PROJECT_MEMBER.CREATED_AT</code>.
     */
    public ProjectMember setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Getter for <code>scale_advisor.PROJECT_MEMBER.UPDATED_AT</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>scale_advisor.PROJECT_MEMBER.UPDATED_AT</code>.
     */
    public ProjectMember setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ProjectMember other = (ProjectMember) obj;
        if (this.userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!this.userId.equals(other.userId))
            return false;
        if (this.projectId == null) {
            if (other.projectId != null)
                return false;
        }
        else if (!this.projectId.equals(other.projectId))
            return false;
        if (this.state == null) {
            if (other.state != null)
                return false;
        }
        else if (!this.state.equals(other.state))
            return false;
        if (this.role == null) {
            if (other.role != null)
                return false;
        }
        else if (!this.role.equals(other.role))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        result = prime * result + ((this.projectId == null) ? 0 : this.projectId.hashCode());
        result = prime * result + ((this.state == null) ? 0 : this.state.hashCode());
        result = prime * result + ((this.role == null) ? 0 : this.role.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ProjectMember (");

        sb.append(userId);
        sb.append(", ").append(projectId);
        sb.append(", ").append(state);
        sb.append(", ").append(role);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(updatedAt);

        sb.append(")");
        return sb.toString();
    }
}
