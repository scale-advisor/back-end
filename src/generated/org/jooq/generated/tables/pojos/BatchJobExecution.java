/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BatchJobExecution implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long jobExecutionId;
    private Long version;
    private Long jobInstanceId;
    private LocalDateTime createTime;
    private LocalDateTime startTime;
    private LocalDateTime endTime;
    private String status;
    private String exitCode;
    private String exitMessage;
    private LocalDateTime lastUpdated;

    public BatchJobExecution() {}

    public BatchJobExecution(BatchJobExecution value) {
        this.jobExecutionId = value.jobExecutionId;
        this.version = value.version;
        this.jobInstanceId = value.jobInstanceId;
        this.createTime = value.createTime;
        this.startTime = value.startTime;
        this.endTime = value.endTime;
        this.status = value.status;
        this.exitCode = value.exitCode;
        this.exitMessage = value.exitMessage;
        this.lastUpdated = value.lastUpdated;
    }

    public BatchJobExecution(
        Long jobExecutionId,
        Long version,
        Long jobInstanceId,
        LocalDateTime createTime,
        LocalDateTime startTime,
        LocalDateTime endTime,
        String status,
        String exitCode,
        String exitMessage,
        LocalDateTime lastUpdated
    ) {
        this.jobExecutionId = jobExecutionId;
        this.version = version;
        this.jobInstanceId = jobInstanceId;
        this.createTime = createTime;
        this.startTime = startTime;
        this.endTime = endTime;
        this.status = status;
        this.exitCode = exitCode;
        this.exitMessage = exitMessage;
        this.lastUpdated = lastUpdated;
    }

    /**
     * Getter for
     * <code>scale_advisor.BATCH_JOB_EXECUTION.JOB_EXECUTION_ID</code>.
     */
    public Long getJobExecutionId() {
        return this.jobExecutionId;
    }

    /**
     * Setter for
     * <code>scale_advisor.BATCH_JOB_EXECUTION.JOB_EXECUTION_ID</code>.
     */
    public BatchJobExecution setJobExecutionId(Long jobExecutionId) {
        this.jobExecutionId = jobExecutionId;
        return this;
    }

    /**
     * Getter for <code>scale_advisor.BATCH_JOB_EXECUTION.VERSION</code>.
     */
    public Long getVersion() {
        return this.version;
    }

    /**
     * Setter for <code>scale_advisor.BATCH_JOB_EXECUTION.VERSION</code>.
     */
    public BatchJobExecution setVersion(Long version) {
        this.version = version;
        return this;
    }

    /**
     * Getter for
     * <code>scale_advisor.BATCH_JOB_EXECUTION.JOB_INSTANCE_ID</code>.
     */
    public Long getJobInstanceId() {
        return this.jobInstanceId;
    }

    /**
     * Setter for
     * <code>scale_advisor.BATCH_JOB_EXECUTION.JOB_INSTANCE_ID</code>.
     */
    public BatchJobExecution setJobInstanceId(Long jobInstanceId) {
        this.jobInstanceId = jobInstanceId;
        return this;
    }

    /**
     * Getter for <code>scale_advisor.BATCH_JOB_EXECUTION.CREATE_TIME</code>.
     */
    public LocalDateTime getCreateTime() {
        return this.createTime;
    }

    /**
     * Setter for <code>scale_advisor.BATCH_JOB_EXECUTION.CREATE_TIME</code>.
     */
    public BatchJobExecution setCreateTime(LocalDateTime createTime) {
        this.createTime = createTime;
        return this;
    }

    /**
     * Getter for <code>scale_advisor.BATCH_JOB_EXECUTION.START_TIME</code>.
     */
    public LocalDateTime getStartTime() {
        return this.startTime;
    }

    /**
     * Setter for <code>scale_advisor.BATCH_JOB_EXECUTION.START_TIME</code>.
     */
    public BatchJobExecution setStartTime(LocalDateTime startTime) {
        this.startTime = startTime;
        return this;
    }

    /**
     * Getter for <code>scale_advisor.BATCH_JOB_EXECUTION.END_TIME</code>.
     */
    public LocalDateTime getEndTime() {
        return this.endTime;
    }

    /**
     * Setter for <code>scale_advisor.BATCH_JOB_EXECUTION.END_TIME</code>.
     */
    public BatchJobExecution setEndTime(LocalDateTime endTime) {
        this.endTime = endTime;
        return this;
    }

    /**
     * Getter for <code>scale_advisor.BATCH_JOB_EXECUTION.STATUS</code>.
     */
    public String getStatus() {
        return this.status;
    }

    /**
     * Setter for <code>scale_advisor.BATCH_JOB_EXECUTION.STATUS</code>.
     */
    public BatchJobExecution setStatus(String status) {
        this.status = status;
        return this;
    }

    /**
     * Getter for <code>scale_advisor.BATCH_JOB_EXECUTION.EXIT_CODE</code>.
     */
    public String getExitCode() {
        return this.exitCode;
    }

    /**
     * Setter for <code>scale_advisor.BATCH_JOB_EXECUTION.EXIT_CODE</code>.
     */
    public BatchJobExecution setExitCode(String exitCode) {
        this.exitCode = exitCode;
        return this;
    }

    /**
     * Getter for <code>scale_advisor.BATCH_JOB_EXECUTION.EXIT_MESSAGE</code>.
     */
    public String getExitMessage() {
        return this.exitMessage;
    }

    /**
     * Setter for <code>scale_advisor.BATCH_JOB_EXECUTION.EXIT_MESSAGE</code>.
     */
    public BatchJobExecution setExitMessage(String exitMessage) {
        this.exitMessage = exitMessage;
        return this;
    }

    /**
     * Getter for <code>scale_advisor.BATCH_JOB_EXECUTION.LAST_UPDATED</code>.
     */
    public LocalDateTime getLastUpdated() {
        return this.lastUpdated;
    }

    /**
     * Setter for <code>scale_advisor.BATCH_JOB_EXECUTION.LAST_UPDATED</code>.
     */
    public BatchJobExecution setLastUpdated(LocalDateTime lastUpdated) {
        this.lastUpdated = lastUpdated;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final BatchJobExecution other = (BatchJobExecution) obj;
        if (this.jobExecutionId == null) {
            if (other.jobExecutionId != null)
                return false;
        }
        else if (!this.jobExecutionId.equals(other.jobExecutionId))
            return false;
        if (this.version == null) {
            if (other.version != null)
                return false;
        }
        else if (!this.version.equals(other.version))
            return false;
        if (this.jobInstanceId == null) {
            if (other.jobInstanceId != null)
                return false;
        }
        else if (!this.jobInstanceId.equals(other.jobInstanceId))
            return false;
        if (this.createTime == null) {
            if (other.createTime != null)
                return false;
        }
        else if (!this.createTime.equals(other.createTime))
            return false;
        if (this.startTime == null) {
            if (other.startTime != null)
                return false;
        }
        else if (!this.startTime.equals(other.startTime))
            return false;
        if (this.endTime == null) {
            if (other.endTime != null)
                return false;
        }
        else if (!this.endTime.equals(other.endTime))
            return false;
        if (this.status == null) {
            if (other.status != null)
                return false;
        }
        else if (!this.status.equals(other.status))
            return false;
        if (this.exitCode == null) {
            if (other.exitCode != null)
                return false;
        }
        else if (!this.exitCode.equals(other.exitCode))
            return false;
        if (this.exitMessage == null) {
            if (other.exitMessage != null)
                return false;
        }
        else if (!this.exitMessage.equals(other.exitMessage))
            return false;
        if (this.lastUpdated == null) {
            if (other.lastUpdated != null)
                return false;
        }
        else if (!this.lastUpdated.equals(other.lastUpdated))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.jobExecutionId == null) ? 0 : this.jobExecutionId.hashCode());
        result = prime * result + ((this.version == null) ? 0 : this.version.hashCode());
        result = prime * result + ((this.jobInstanceId == null) ? 0 : this.jobInstanceId.hashCode());
        result = prime * result + ((this.createTime == null) ? 0 : this.createTime.hashCode());
        result = prime * result + ((this.startTime == null) ? 0 : this.startTime.hashCode());
        result = prime * result + ((this.endTime == null) ? 0 : this.endTime.hashCode());
        result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
        result = prime * result + ((this.exitCode == null) ? 0 : this.exitCode.hashCode());
        result = prime * result + ((this.exitMessage == null) ? 0 : this.exitMessage.hashCode());
        result = prime * result + ((this.lastUpdated == null) ? 0 : this.lastUpdated.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("BatchJobExecution (");

        sb.append(jobExecutionId);
        sb.append(", ").append(version);
        sb.append(", ").append(jobInstanceId);
        sb.append(", ").append(createTime);
        sb.append(", ").append(startTime);
        sb.append(", ").append(endTime);
        sb.append(", ").append(status);
        sb.append(", ").append(exitCode);
        sb.append(", ").append(exitMessage);
        sb.append(", ").append(lastUpdated);

        sb.append(")");
        return sb.toString();
    }
}
