/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FpWeights implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long fpWeightsId;
    private Long projectId;
    private BigDecimal ilfWeight;
    private BigDecimal eifWeight;
    private BigDecimal eiWeight;
    private BigDecimal eoWeight;
    private BigDecimal eqWeight;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;

    public FpWeights() {}

    public FpWeights(FpWeights value) {
        this.fpWeightsId = value.fpWeightsId;
        this.projectId = value.projectId;
        this.ilfWeight = value.ilfWeight;
        this.eifWeight = value.eifWeight;
        this.eiWeight = value.eiWeight;
        this.eoWeight = value.eoWeight;
        this.eqWeight = value.eqWeight;
        this.createdAt = value.createdAt;
        this.updatedAt = value.updatedAt;
    }

    public FpWeights(
        Long fpWeightsId,
        Long projectId,
        BigDecimal ilfWeight,
        BigDecimal eifWeight,
        BigDecimal eiWeight,
        BigDecimal eoWeight,
        BigDecimal eqWeight,
        LocalDateTime createdAt,
        LocalDateTime updatedAt
    ) {
        this.fpWeightsId = fpWeightsId;
        this.projectId = projectId;
        this.ilfWeight = ilfWeight;
        this.eifWeight = eifWeight;
        this.eiWeight = eiWeight;
        this.eoWeight = eoWeight;
        this.eqWeight = eqWeight;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for <code>scale_advisor.FP_WEIGHTS.FP_WEIGHTS_ID</code>.
     */
    public Long getFpWeightsId() {
        return this.fpWeightsId;
    }

    /**
     * Setter for <code>scale_advisor.FP_WEIGHTS.FP_WEIGHTS_ID</code>.
     */
    public FpWeights setFpWeightsId(Long fpWeightsId) {
        this.fpWeightsId = fpWeightsId;
        return this;
    }

    /**
     * Getter for <code>scale_advisor.FP_WEIGHTS.PROJECT_ID</code>.
     */
    public Long getProjectId() {
        return this.projectId;
    }

    /**
     * Setter for <code>scale_advisor.FP_WEIGHTS.PROJECT_ID</code>.
     */
    public FpWeights setProjectId(Long projectId) {
        this.projectId = projectId;
        return this;
    }

    /**
     * Getter for <code>scale_advisor.FP_WEIGHTS.ILF_WEIGHT</code>.
     */
    public BigDecimal getIlfWeight() {
        return this.ilfWeight;
    }

    /**
     * Setter for <code>scale_advisor.FP_WEIGHTS.ILF_WEIGHT</code>.
     */
    public FpWeights setIlfWeight(BigDecimal ilfWeight) {
        this.ilfWeight = ilfWeight;
        return this;
    }

    /**
     * Getter for <code>scale_advisor.FP_WEIGHTS.EIF_WEIGHT</code>.
     */
    public BigDecimal getEifWeight() {
        return this.eifWeight;
    }

    /**
     * Setter for <code>scale_advisor.FP_WEIGHTS.EIF_WEIGHT</code>.
     */
    public FpWeights setEifWeight(BigDecimal eifWeight) {
        this.eifWeight = eifWeight;
        return this;
    }

    /**
     * Getter for <code>scale_advisor.FP_WEIGHTS.EI_WEIGHT</code>.
     */
    public BigDecimal getEiWeight() {
        return this.eiWeight;
    }

    /**
     * Setter for <code>scale_advisor.FP_WEIGHTS.EI_WEIGHT</code>.
     */
    public FpWeights setEiWeight(BigDecimal eiWeight) {
        this.eiWeight = eiWeight;
        return this;
    }

    /**
     * Getter for <code>scale_advisor.FP_WEIGHTS.EO_WEIGHT</code>.
     */
    public BigDecimal getEoWeight() {
        return this.eoWeight;
    }

    /**
     * Setter for <code>scale_advisor.FP_WEIGHTS.EO_WEIGHT</code>.
     */
    public FpWeights setEoWeight(BigDecimal eoWeight) {
        this.eoWeight = eoWeight;
        return this;
    }

    /**
     * Getter for <code>scale_advisor.FP_WEIGHTS.EQ_WEIGHT</code>.
     */
    public BigDecimal getEqWeight() {
        return this.eqWeight;
    }

    /**
     * Setter for <code>scale_advisor.FP_WEIGHTS.EQ_WEIGHT</code>.
     */
    public FpWeights setEqWeight(BigDecimal eqWeight) {
        this.eqWeight = eqWeight;
        return this;
    }

    /**
     * Getter for <code>scale_advisor.FP_WEIGHTS.CREATED_AT</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>scale_advisor.FP_WEIGHTS.CREATED_AT</code>.
     */
    public FpWeights setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Getter for <code>scale_advisor.FP_WEIGHTS.UPDATED_AT</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>scale_advisor.FP_WEIGHTS.UPDATED_AT</code>.
     */
    public FpWeights setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final FpWeights other = (FpWeights) obj;
        if (this.fpWeightsId == null) {
            if (other.fpWeightsId != null)
                return false;
        }
        else if (!this.fpWeightsId.equals(other.fpWeightsId))
            return false;
        if (this.projectId == null) {
            if (other.projectId != null)
                return false;
        }
        else if (!this.projectId.equals(other.projectId))
            return false;
        if (this.ilfWeight == null) {
            if (other.ilfWeight != null)
                return false;
        }
        else if (!this.ilfWeight.equals(other.ilfWeight))
            return false;
        if (this.eifWeight == null) {
            if (other.eifWeight != null)
                return false;
        }
        else if (!this.eifWeight.equals(other.eifWeight))
            return false;
        if (this.eiWeight == null) {
            if (other.eiWeight != null)
                return false;
        }
        else if (!this.eiWeight.equals(other.eiWeight))
            return false;
        if (this.eoWeight == null) {
            if (other.eoWeight != null)
                return false;
        }
        else if (!this.eoWeight.equals(other.eoWeight))
            return false;
        if (this.eqWeight == null) {
            if (other.eqWeight != null)
                return false;
        }
        else if (!this.eqWeight.equals(other.eqWeight))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.fpWeightsId == null) ? 0 : this.fpWeightsId.hashCode());
        result = prime * result + ((this.projectId == null) ? 0 : this.projectId.hashCode());
        result = prime * result + ((this.ilfWeight == null) ? 0 : this.ilfWeight.hashCode());
        result = prime * result + ((this.eifWeight == null) ? 0 : this.eifWeight.hashCode());
        result = prime * result + ((this.eiWeight == null) ? 0 : this.eiWeight.hashCode());
        result = prime * result + ((this.eoWeight == null) ? 0 : this.eoWeight.hashCode());
        result = prime * result + ((this.eqWeight == null) ? 0 : this.eqWeight.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("FpWeights (");

        sb.append(fpWeightsId);
        sb.append(", ").append(projectId);
        sb.append(", ").append(ilfWeight);
        sb.append(", ").append(eifWeight);
        sb.append(", ").append(eiWeight);
        sb.append(", ").append(eoWeight);
        sb.append(", ").append(eqWeight);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(updatedAt);

        sb.append(")");
        return sb.toString();
    }
}
