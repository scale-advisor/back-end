/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserProject implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long userId;
    private Long projectId;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;

    public UserProject() {}

    public UserProject(UserProject value) {
        this.userId = value.userId;
        this.projectId = value.projectId;
        this.createdAt = value.createdAt;
        this.updatedAt = value.updatedAt;
    }

    public UserProject(
        Long userId,
        Long projectId,
        LocalDateTime createdAt,
        LocalDateTime updatedAt
    ) {
        this.userId = userId;
        this.projectId = projectId;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for <code>scale_advisor.USER_PROJECT.USER_ID</code>.
     */
    public Long getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>scale_advisor.USER_PROJECT.USER_ID</code>.
     */
    public UserProject setUserId(Long userId) {
        this.userId = userId;
        return this;
    }

    /**
     * Getter for <code>scale_advisor.USER_PROJECT.PROJECT_ID</code>.
     */
    public Long getProjectId() {
        return this.projectId;
    }

    /**
     * Setter for <code>scale_advisor.USER_PROJECT.PROJECT_ID</code>.
     */
    public UserProject setProjectId(Long projectId) {
        this.projectId = projectId;
        return this;
    }

    /**
     * Getter for <code>scale_advisor.USER_PROJECT.CREATED_AT</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>scale_advisor.USER_PROJECT.CREATED_AT</code>.
     */
    public UserProject setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Getter for <code>scale_advisor.USER_PROJECT.UPDATED_AT</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>scale_advisor.USER_PROJECT.UPDATED_AT</code>.
     */
    public UserProject setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final UserProject other = (UserProject) obj;
        if (this.userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!this.userId.equals(other.userId))
            return false;
        if (this.projectId == null) {
            if (other.projectId != null)
                return false;
        }
        else if (!this.projectId.equals(other.projectId))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        result = prime * result + ((this.projectId == null) ? 0 : this.projectId.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("UserProject (");

        sb.append(userId);
        sb.append(", ").append(projectId);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(updatedAt);

        sb.append(")");
        return sb.toString();
    }
}
