/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class User implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long userId;
    private String email;
    private String password;
    private String name;
    private String socialId;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;

    public User() {}

    public User(User value) {
        this.userId = value.userId;
        this.email = value.email;
        this.password = value.password;
        this.name = value.name;
        this.socialId = value.socialId;
        this.createdAt = value.createdAt;
        this.updatedAt = value.updatedAt;
    }

    public User(
        Long userId,
        String email,
        String password,
        String name,
        String socialId,
        LocalDateTime createdAt,
        LocalDateTime updatedAt
    ) {
        this.userId = userId;
        this.email = email;
        this.password = password;
        this.name = name;
        this.socialId = socialId;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for <code>scale_advisor.user.user_id</code>.
     */
    public Long getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>scale_advisor.user.user_id</code>.
     */
    public User setUserId(Long userId) {
        this.userId = userId;
        return this;
    }

    /**
     * Getter for <code>scale_advisor.user.email</code>.
     */
    public String getEmail() {
        return this.email;
    }

    /**
     * Setter for <code>scale_advisor.user.email</code>.
     */
    public User setEmail(String email) {
        this.email = email;
        return this;
    }

    /**
     * Getter for <code>scale_advisor.user.password</code>.
     */
    public String getPassword() {
        return this.password;
    }

    /**
     * Setter for <code>scale_advisor.user.password</code>.
     */
    public User setPassword(String password) {
        this.password = password;
        return this;
    }

    /**
     * Getter for <code>scale_advisor.user.name</code>.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>scale_advisor.user.name</code>.
     */
    public User setName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Getter for <code>scale_advisor.user.social_id</code>.
     */
    public String getSocialId() {
        return this.socialId;
    }

    /**
     * Setter for <code>scale_advisor.user.social_id</code>.
     */
    public User setSocialId(String socialId) {
        this.socialId = socialId;
        return this;
    }

    /**
     * Getter for <code>scale_advisor.user.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>scale_advisor.user.created_at</code>.
     */
    public User setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Getter for <code>scale_advisor.user.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>scale_advisor.user.updated_at</code>.
     */
    public User setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final User other = (User) obj;
        if (this.userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!this.userId.equals(other.userId))
            return false;
        if (this.email == null) {
            if (other.email != null)
                return false;
        }
        else if (!this.email.equals(other.email))
            return false;
        if (this.password == null) {
            if (other.password != null)
                return false;
        }
        else if (!this.password.equals(other.password))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.socialId == null) {
            if (other.socialId != null)
                return false;
        }
        else if (!this.socialId.equals(other.socialId))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        result = prime * result + ((this.email == null) ? 0 : this.email.hashCode());
        result = prime * result + ((this.password == null) ? 0 : this.password.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.socialId == null) ? 0 : this.socialId.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("User (");

        sb.append(userId);
        sb.append(", ").append(email);
        sb.append(", ").append(password);
        sb.append(", ").append(name);
        sb.append(", ").append(socialId);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(updatedAt);

        sb.append(")");
        return sb.toString();
    }
}
