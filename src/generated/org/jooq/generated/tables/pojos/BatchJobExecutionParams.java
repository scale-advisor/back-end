/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BatchJobExecutionParams implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long jobExecutionId;
    private String parameterName;
    private String parameterType;
    private String parameterValue;
    private String identifying;

    public BatchJobExecutionParams() {}

    public BatchJobExecutionParams(BatchJobExecutionParams value) {
        this.jobExecutionId = value.jobExecutionId;
        this.parameterName = value.parameterName;
        this.parameterType = value.parameterType;
        this.parameterValue = value.parameterValue;
        this.identifying = value.identifying;
    }

    public BatchJobExecutionParams(
        Long jobExecutionId,
        String parameterName,
        String parameterType,
        String parameterValue,
        String identifying
    ) {
        this.jobExecutionId = jobExecutionId;
        this.parameterName = parameterName;
        this.parameterType = parameterType;
        this.parameterValue = parameterValue;
        this.identifying = identifying;
    }

    /**
     * Getter for
     * <code>scale_advisor.BATCH_JOB_EXECUTION_PARAMS.JOB_EXECUTION_ID</code>.
     */
    public Long getJobExecutionId() {
        return this.jobExecutionId;
    }

    /**
     * Setter for
     * <code>scale_advisor.BATCH_JOB_EXECUTION_PARAMS.JOB_EXECUTION_ID</code>.
     */
    public BatchJobExecutionParams setJobExecutionId(Long jobExecutionId) {
        this.jobExecutionId = jobExecutionId;
        return this;
    }

    /**
     * Getter for
     * <code>scale_advisor.BATCH_JOB_EXECUTION_PARAMS.PARAMETER_NAME</code>.
     */
    public String getParameterName() {
        return this.parameterName;
    }

    /**
     * Setter for
     * <code>scale_advisor.BATCH_JOB_EXECUTION_PARAMS.PARAMETER_NAME</code>.
     */
    public BatchJobExecutionParams setParameterName(String parameterName) {
        this.parameterName = parameterName;
        return this;
    }

    /**
     * Getter for
     * <code>scale_advisor.BATCH_JOB_EXECUTION_PARAMS.PARAMETER_TYPE</code>.
     */
    public String getParameterType() {
        return this.parameterType;
    }

    /**
     * Setter for
     * <code>scale_advisor.BATCH_JOB_EXECUTION_PARAMS.PARAMETER_TYPE</code>.
     */
    public BatchJobExecutionParams setParameterType(String parameterType) {
        this.parameterType = parameterType;
        return this;
    }

    /**
     * Getter for
     * <code>scale_advisor.BATCH_JOB_EXECUTION_PARAMS.PARAMETER_VALUE</code>.
     */
    public String getParameterValue() {
        return this.parameterValue;
    }

    /**
     * Setter for
     * <code>scale_advisor.BATCH_JOB_EXECUTION_PARAMS.PARAMETER_VALUE</code>.
     */
    public BatchJobExecutionParams setParameterValue(String parameterValue) {
        this.parameterValue = parameterValue;
        return this;
    }

    /**
     * Getter for
     * <code>scale_advisor.BATCH_JOB_EXECUTION_PARAMS.IDENTIFYING</code>.
     */
    public String getIdentifying() {
        return this.identifying;
    }

    /**
     * Setter for
     * <code>scale_advisor.BATCH_JOB_EXECUTION_PARAMS.IDENTIFYING</code>.
     */
    public BatchJobExecutionParams setIdentifying(String identifying) {
        this.identifying = identifying;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final BatchJobExecutionParams other = (BatchJobExecutionParams) obj;
        if (this.jobExecutionId == null) {
            if (other.jobExecutionId != null)
                return false;
        }
        else if (!this.jobExecutionId.equals(other.jobExecutionId))
            return false;
        if (this.parameterName == null) {
            if (other.parameterName != null)
                return false;
        }
        else if (!this.parameterName.equals(other.parameterName))
            return false;
        if (this.parameterType == null) {
            if (other.parameterType != null)
                return false;
        }
        else if (!this.parameterType.equals(other.parameterType))
            return false;
        if (this.parameterValue == null) {
            if (other.parameterValue != null)
                return false;
        }
        else if (!this.parameterValue.equals(other.parameterValue))
            return false;
        if (this.identifying == null) {
            if (other.identifying != null)
                return false;
        }
        else if (!this.identifying.equals(other.identifying))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.jobExecutionId == null) ? 0 : this.jobExecutionId.hashCode());
        result = prime * result + ((this.parameterName == null) ? 0 : this.parameterName.hashCode());
        result = prime * result + ((this.parameterType == null) ? 0 : this.parameterType.hashCode());
        result = prime * result + ((this.parameterValue == null) ? 0 : this.parameterValue.hashCode());
        result = prime * result + ((this.identifying == null) ? 0 : this.identifying.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("BatchJobExecutionParams (");

        sb.append(jobExecutionId);
        sb.append(", ").append(parameterName);
        sb.append(", ").append(parameterType);
        sb.append(", ").append(parameterValue);
        sb.append(", ").append(identifying);

        sb.append(")");
        return sb.toString();
    }
}
