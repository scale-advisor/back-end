/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BatchJobExecutionSeq implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private String uniqueKey;

    public BatchJobExecutionSeq() {}

    public BatchJobExecutionSeq(BatchJobExecutionSeq value) {
        this.id = value.id;
        this.uniqueKey = value.uniqueKey;
    }

    public BatchJobExecutionSeq(
        Long id,
        String uniqueKey
    ) {
        this.id = id;
        this.uniqueKey = uniqueKey;
    }

    /**
     * Getter for <code>scale_advisor.BATCH_JOB_EXECUTION_SEQ.ID</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>scale_advisor.BATCH_JOB_EXECUTION_SEQ.ID</code>.
     */
    public BatchJobExecutionSeq setId(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>scale_advisor.BATCH_JOB_EXECUTION_SEQ.UNIQUE_KEY</code>.
     */
    public String getUniqueKey() {
        return this.uniqueKey;
    }

    /**
     * Setter for <code>scale_advisor.BATCH_JOB_EXECUTION_SEQ.UNIQUE_KEY</code>.
     */
    public BatchJobExecutionSeq setUniqueKey(String uniqueKey) {
        this.uniqueKey = uniqueKey;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final BatchJobExecutionSeq other = (BatchJobExecutionSeq) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.uniqueKey == null) {
            if (other.uniqueKey != null)
                return false;
        }
        else if (!this.uniqueKey.equals(other.uniqueKey))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.uniqueKey == null) ? 0 : this.uniqueKey.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("BatchJobExecutionSeq (");

        sb.append(id);
        sb.append(", ").append(uniqueKey);

        sb.append(")");
        return sb.toString();
    }
}
