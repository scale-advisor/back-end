/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.generated.tables.File;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FileRecord extends UpdatableRecordImpl<FileRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>scale_advisor.FILE.FILE_ID</code>.
     */
    public FileRecord setFileId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.FILE.FILE_ID</code>.
     */
    public Long getFileId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>scale_advisor.FILE.PROJECT_ID</code>.
     */
    public FileRecord setProjectId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.FILE.PROJECT_ID</code>.
     */
    public Long getProjectId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>scale_advisor.FILE.VERSION_MAJOR_NUMBER</code>.
     */
    public FileRecord setVersionMajorNumber(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.FILE.VERSION_MAJOR_NUMBER</code>.
     */
    public Integer getVersionMajorNumber() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>scale_advisor.FILE.VERSION_MINOR_NUMBER</code>.
     */
    public FileRecord setVersionMinorNumber(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.FILE.VERSION_MINOR_NUMBER</code>.
     */
    public Integer getVersionMinorNumber() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>scale_advisor.FILE.TYPE</code>.
     */
    public FileRecord setType(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.FILE.TYPE</code>.
     */
    public String getType() {
        return (String) get(4);
    }

    /**
     * Setter for <code>scale_advisor.FILE.NAME</code>.
     */
    public FileRecord setName(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.FILE.NAME</code>.
     */
    public String getName() {
        return (String) get(5);
    }

    /**
     * Setter for <code>scale_advisor.FILE.UPLOADER_ID</code>.
     */
    public FileRecord setUploaderId(Long value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.FILE.UPLOADER_ID</code>.
     */
    public Long getUploaderId() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>scale_advisor.FILE.PATH</code>.
     */
    public FileRecord setPath(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.FILE.PATH</code>.
     */
    public String getPath() {
        return (String) get(7);
    }

    /**
     * Setter for <code>scale_advisor.FILE.EXTENSION</code>.
     */
    public FileRecord setExtension(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.FILE.EXTENSION</code>.
     */
    public String getExtension() {
        return (String) get(8);
    }

    /**
     * Setter for <code>scale_advisor.FILE.CREATED_AT</code>.
     */
    public FileRecord setCreatedAt(LocalDateTime value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.FILE.CREATED_AT</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(9);
    }

    /**
     * Setter for <code>scale_advisor.FILE.UPDATED_AT</code>.
     */
    public FileRecord setUpdatedAt(LocalDateTime value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.FILE.UPDATED_AT</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FileRecord
     */
    public FileRecord() {
        super(File.FILE);
    }

    /**
     * Create a detached, initialised FileRecord
     */
    public FileRecord(Long fileId, Long projectId, Integer versionMajorNumber, Integer versionMinorNumber, String type, String name, Long uploaderId, String path, String extension, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(File.FILE);

        setFileId(fileId);
        setProjectId(projectId);
        setVersionMajorNumber(versionMajorNumber);
        setVersionMinorNumber(versionMinorNumber);
        setType(type);
        setName(name);
        setUploaderId(uploaderId);
        setPath(path);
        setExtension(extension);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised FileRecord
     */
    public FileRecord(org.jooq.generated.tables.pojos.File value) {
        super(File.FILE);

        if (value != null) {
            setFileId(value.getFileId());
            setProjectId(value.getProjectId());
            setVersionMajorNumber(value.getVersionMajorNumber());
            setVersionMinorNumber(value.getVersionMinorNumber());
            setType(value.getType());
            setName(value.getName());
            setUploaderId(value.getUploaderId());
            setPath(value.getPath());
            setExtension(value.getExtension());
            setCreatedAt(value.getCreatedAt());
            setUpdatedAt(value.getUpdatedAt());
            resetChangedOnNotNull();
        }
    }
}
