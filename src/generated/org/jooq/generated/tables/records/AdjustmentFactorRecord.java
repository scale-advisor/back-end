/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.generated.tables.AdjustmentFactor;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AdjustmentFactorRecord extends UpdatableRecordImpl<AdjustmentFactorRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>scale_advisor.ADJUSTMENT_FACTOR.ADJUSTMENT_FACTOR_ID</code>.
     */
    public AdjustmentFactorRecord setAdjustmentFactorId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for
     * <code>scale_advisor.ADJUSTMENT_FACTOR.ADJUSTMENT_FACTOR_ID</code>.
     */
    public Long getAdjustmentFactorId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>scale_advisor.ADJUSTMENT_FACTOR.PROJECT_ID</code>.
     */
    public AdjustmentFactorRecord setProjectId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.ADJUSTMENT_FACTOR.PROJECT_ID</code>.
     */
    public Long getProjectId() {
        return (Long) get(1);
    }

    /**
     * Setter for
     * <code>scale_advisor.ADJUSTMENT_FACTOR.VERSION_MAJOR_NUMBER</code>.
     */
    public AdjustmentFactorRecord setVersionMajorNumber(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for
     * <code>scale_advisor.ADJUSTMENT_FACTOR.VERSION_MAJOR_NUMBER</code>.
     */
    public Integer getVersionMajorNumber() {
        return (Integer) get(2);
    }

    /**
     * Setter for
     * <code>scale_advisor.ADJUSTMENT_FACTOR.VERSION_MINOR_NUMBER</code>.
     */
    public AdjustmentFactorRecord setVersionMinorNumber(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for
     * <code>scale_advisor.ADJUSTMENT_FACTOR.VERSION_MINOR_NUMBER</code>.
     */
    public Integer getVersionMinorNumber() {
        return (Integer) get(3);
    }

    /**
     * Setter for
     * <code>scale_advisor.ADJUSTMENT_FACTOR.ADJUSTMENT_FACTOR_TYPE</code>.
     */
    public AdjustmentFactorRecord setAdjustmentFactorType(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for
     * <code>scale_advisor.ADJUSTMENT_FACTOR.ADJUSTMENT_FACTOR_TYPE</code>.
     */
    public String getAdjustmentFactorType() {
        return (String) get(4);
    }

    /**
     * Setter for
     * <code>scale_advisor.ADJUSTMENT_FACTOR.ADJUSTMENT_FACTOR_LEVEL</code>.
     */
    public AdjustmentFactorRecord setAdjustmentFactorLevel(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for
     * <code>scale_advisor.ADJUSTMENT_FACTOR.ADJUSTMENT_FACTOR_LEVEL</code>.
     */
    public Integer getAdjustmentFactorLevel() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>scale_advisor.ADJUSTMENT_FACTOR.CREATED_AT</code>.
     */
    public AdjustmentFactorRecord setCreatedAt(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.ADJUSTMENT_FACTOR.CREATED_AT</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>scale_advisor.ADJUSTMENT_FACTOR.UPDATED_AT</code>.
     */
    public AdjustmentFactorRecord setUpdatedAt(LocalDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.ADJUSTMENT_FACTOR.UPDATED_AT</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AdjustmentFactorRecord
     */
    public AdjustmentFactorRecord() {
        super(AdjustmentFactor.ADJUSTMENT_FACTOR);
    }

    /**
     * Create a detached, initialised AdjustmentFactorRecord
     */
    public AdjustmentFactorRecord(Long adjustmentFactorId, Long projectId, Integer versionMajorNumber, Integer versionMinorNumber, String adjustmentFactorType, Integer adjustmentFactorLevel, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(AdjustmentFactor.ADJUSTMENT_FACTOR);

        setAdjustmentFactorId(adjustmentFactorId);
        setProjectId(projectId);
        setVersionMajorNumber(versionMajorNumber);
        setVersionMinorNumber(versionMinorNumber);
        setAdjustmentFactorType(adjustmentFactorType);
        setAdjustmentFactorLevel(adjustmentFactorLevel);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised AdjustmentFactorRecord
     */
    public AdjustmentFactorRecord(org.jooq.generated.tables.pojos.AdjustmentFactor value) {
        super(AdjustmentFactor.ADJUSTMENT_FACTOR);

        if (value != null) {
            setAdjustmentFactorId(value.getAdjustmentFactorId());
            setProjectId(value.getProjectId());
            setVersionMajorNumber(value.getVersionMajorNumber());
            setVersionMinorNumber(value.getVersionMinorNumber());
            setAdjustmentFactorType(value.getAdjustmentFactorType());
            setAdjustmentFactorLevel(value.getAdjustmentFactorLevel());
            setCreatedAt(value.getCreatedAt());
            setUpdatedAt(value.getUpdatedAt());
            resetChangedOnNotNull();
        }
    }
}
