/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import org.jooq.generated.tables.BatchJobExecutionParams;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BatchJobExecutionParamsRecord extends TableRecordImpl<BatchJobExecutionParamsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>scale_advisor.BATCH_JOB_EXECUTION_PARAMS.JOB_EXECUTION_ID</code>.
     */
    public BatchJobExecutionParamsRecord setJobExecutionId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for
     * <code>scale_advisor.BATCH_JOB_EXECUTION_PARAMS.JOB_EXECUTION_ID</code>.
     */
    public Long getJobExecutionId() {
        return (Long) get(0);
    }

    /**
     * Setter for
     * <code>scale_advisor.BATCH_JOB_EXECUTION_PARAMS.PARAMETER_NAME</code>.
     */
    public BatchJobExecutionParamsRecord setParameterName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for
     * <code>scale_advisor.BATCH_JOB_EXECUTION_PARAMS.PARAMETER_NAME</code>.
     */
    public String getParameterName() {
        return (String) get(1);
    }

    /**
     * Setter for
     * <code>scale_advisor.BATCH_JOB_EXECUTION_PARAMS.PARAMETER_TYPE</code>.
     */
    public BatchJobExecutionParamsRecord setParameterType(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for
     * <code>scale_advisor.BATCH_JOB_EXECUTION_PARAMS.PARAMETER_TYPE</code>.
     */
    public String getParameterType() {
        return (String) get(2);
    }

    /**
     * Setter for
     * <code>scale_advisor.BATCH_JOB_EXECUTION_PARAMS.PARAMETER_VALUE</code>.
     */
    public BatchJobExecutionParamsRecord setParameterValue(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for
     * <code>scale_advisor.BATCH_JOB_EXECUTION_PARAMS.PARAMETER_VALUE</code>.
     */
    public String getParameterValue() {
        return (String) get(3);
    }

    /**
     * Setter for
     * <code>scale_advisor.BATCH_JOB_EXECUTION_PARAMS.IDENTIFYING</code>.
     */
    public BatchJobExecutionParamsRecord setIdentifying(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for
     * <code>scale_advisor.BATCH_JOB_EXECUTION_PARAMS.IDENTIFYING</code>.
     */
    public String getIdentifying() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BatchJobExecutionParamsRecord
     */
    public BatchJobExecutionParamsRecord() {
        super(BatchJobExecutionParams.BATCH_JOB_EXECUTION_PARAMS);
    }

    /**
     * Create a detached, initialised BatchJobExecutionParamsRecord
     */
    public BatchJobExecutionParamsRecord(Long jobExecutionId, String parameterName, String parameterType, String parameterValue, String identifying) {
        super(BatchJobExecutionParams.BATCH_JOB_EXECUTION_PARAMS);

        setJobExecutionId(jobExecutionId);
        setParameterName(parameterName);
        setParameterType(parameterType);
        setParameterValue(parameterValue);
        setIdentifying(identifying);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised BatchJobExecutionParamsRecord
     */
    public BatchJobExecutionParamsRecord(org.jooq.generated.tables.pojos.BatchJobExecutionParams value) {
        super(BatchJobExecutionParams.BATCH_JOB_EXECUTION_PARAMS);

        if (value != null) {
            setJobExecutionId(value.getJobExecutionId());
            setParameterName(value.getParameterName());
            setParameterType(value.getParameterType());
            setParameterValue(value.getParameterValue());
            setIdentifying(value.getIdentifying());
            resetChangedOnNotNull();
        }
    }
}
