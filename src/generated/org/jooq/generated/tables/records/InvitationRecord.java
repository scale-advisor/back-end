/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import java.time.LocalDateTime;

import org.jooq.Record2;
import org.jooq.generated.tables.Invitation;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InvitationRecord extends UpdatableRecordImpl<InvitationRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>scale_advisor.INVITATION.INVITATION_TOKEN</code>.
     */
    public InvitationRecord setInvitationToken(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.INVITATION.INVITATION_TOKEN</code>.
     */
    public String getInvitationToken() {
        return (String) get(0);
    }

    /**
     * Setter for <code>scale_advisor.INVITATION.PROJECT_ID</code>.
     */
    public InvitationRecord setProjectId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.INVITATION.PROJECT_ID</code>.
     */
    public Long getProjectId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>scale_advisor.INVITATION.EXPIRE_DATE</code>.
     */
    public InvitationRecord setExpireDate(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.INVITATION.EXPIRE_DATE</code>.
     */
    public LocalDateTime getExpireDate() {
        return (LocalDateTime) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InvitationRecord
     */
    public InvitationRecord() {
        super(Invitation.INVITATION);
    }

    /**
     * Create a detached, initialised InvitationRecord
     */
    public InvitationRecord(String invitationToken, Long projectId, LocalDateTime expireDate) {
        super(Invitation.INVITATION);

        setInvitationToken(invitationToken);
        setProjectId(projectId);
        setExpireDate(expireDate);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised InvitationRecord
     */
    public InvitationRecord(org.jooq.generated.tables.pojos.Invitation value) {
        super(Invitation.INVITATION);

        if (value != null) {
            setInvitationToken(value.getInvitationToken());
            setProjectId(value.getProjectId());
            setExpireDate(value.getExpireDate());
            resetChangedOnNotNull();
        }
    }
}
