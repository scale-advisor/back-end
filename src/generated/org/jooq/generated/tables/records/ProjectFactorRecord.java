/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.generated.tables.ProjectFactor;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProjectFactorRecord extends UpdatableRecordImpl<ProjectFactorRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>scale_advisor.PROJECT_FACTOR.PROJECT_FACTOR_ID</code>.
     */
    public ProjectFactorRecord setProjectFactorId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.PROJECT_FACTOR.PROJECT_FACTOR_ID</code>.
     */
    public Long getProjectFactorId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>scale_advisor.PROJECT_FACTOR.PROJECT_ID</code>.
     */
    public ProjectFactorRecord setProjectId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.PROJECT_FACTOR.PROJECT_ID</code>.
     */
    public Long getProjectId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>scale_advisor.PROJECT_FACTOR.UNIT_COST</code>.
     */
    public ProjectFactorRecord setUnitCost(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.PROJECT_FACTOR.UNIT_COST</code>.
     */
    public Integer getUnitCost() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>scale_advisor.PROJECT_FACTOR.TEAM_SIZE</code>.
     */
    public ProjectFactorRecord setTeamSize(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.PROJECT_FACTOR.TEAM_SIZE</code>.
     */
    public Integer getTeamSize() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>scale_advisor.PROJECT_FACTOR.COCOMO_TYPE</code>.
     */
    public ProjectFactorRecord setCocomoType(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.PROJECT_FACTOR.COCOMO_TYPE</code>.
     */
    public String getCocomoType() {
        return (String) get(4);
    }

    /**
     * Setter for <code>scale_advisor.PROJECT_FACTOR.CREATED_AT</code>.
     */
    public ProjectFactorRecord setCreatedAt(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.PROJECT_FACTOR.CREATED_AT</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>scale_advisor.PROJECT_FACTOR.UPDATED_AT</code>.
     */
    public ProjectFactorRecord setUpdatedAt(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.PROJECT_FACTOR.UPDATED_AT</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProjectFactorRecord
     */
    public ProjectFactorRecord() {
        super(ProjectFactor.PROJECT_FACTOR);
    }

    /**
     * Create a detached, initialised ProjectFactorRecord
     */
    public ProjectFactorRecord(Long projectFactorId, Long projectId, Integer unitCost, Integer teamSize, String cocomoType, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(ProjectFactor.PROJECT_FACTOR);

        setProjectFactorId(projectFactorId);
        setProjectId(projectId);
        setUnitCost(unitCost);
        setTeamSize(teamSize);
        setCocomoType(cocomoType);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ProjectFactorRecord
     */
    public ProjectFactorRecord(org.jooq.generated.tables.pojos.ProjectFactor value) {
        super(ProjectFactor.PROJECT_FACTOR);

        if (value != null) {
            setProjectFactorId(value.getProjectFactorId());
            setProjectId(value.getProjectId());
            setUnitCost(value.getUnitCost());
            setTeamSize(value.getTeamSize());
            setCocomoType(value.getCocomoType());
            setCreatedAt(value.getCreatedAt());
            setUpdatedAt(value.getUpdatedAt());
            resetChangedOnNotNull();
        }
    }
}
