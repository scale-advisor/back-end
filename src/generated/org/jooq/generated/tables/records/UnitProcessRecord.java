/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.generated.tables.UnitProcess;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UnitProcessRecord extends UpdatableRecordImpl<UnitProcessRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>scale_advisor.UNIT_PROCESS.UNIT_PROCESS_ID</code>.
     */
    public UnitProcessRecord setUnitProcessId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.UNIT_PROCESS.UNIT_PROCESS_ID</code>.
     */
    public Long getUnitProcessId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>scale_advisor.UNIT_PROCESS.PROJECT_ID</code>.
     */
    public UnitProcessRecord setProjectId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.UNIT_PROCESS.PROJECT_ID</code>.
     */
    public Long getProjectId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>scale_advisor.UNIT_PROCESS.VERSION_MAJOR_NUMBER</code>.
     */
    public UnitProcessRecord setVersionMajorNumber(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.UNIT_PROCESS.VERSION_MAJOR_NUMBER</code>.
     */
    public Integer getVersionMajorNumber() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>scale_advisor.UNIT_PROCESS.VERSION_MINOR_NUMBER</code>.
     */
    public UnitProcessRecord setVersionMinorNumber(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.UNIT_PROCESS.VERSION_MINOR_NUMBER</code>.
     */
    public Integer getVersionMinorNumber() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>scale_advisor.UNIT_PROCESS.UNIT_PROCESS_NAME</code>.
     */
    public UnitProcessRecord setUnitProcessName(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.UNIT_PROCESS.UNIT_PROCESS_NAME</code>.
     */
    public String getUnitProcessName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>scale_advisor.UNIT_PROCESS.FUNCTION_TYPE</code>.
     */
    public UnitProcessRecord setFunctionType(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.UNIT_PROCESS.FUNCTION_TYPE</code>.
     */
    public String getFunctionType() {
        return (String) get(5);
    }

    /**
     * Setter for <code>scale_advisor.UNIT_PROCESS.CREATED_AT</code>.
     */
    public UnitProcessRecord setCreatedAt(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.UNIT_PROCESS.CREATED_AT</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>scale_advisor.UNIT_PROCESS.UPDATED_AT</code>.
     */
    public UnitProcessRecord setUpdatedAt(LocalDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.UNIT_PROCESS.UPDATED_AT</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>scale_advisor.UNIT_PROCESS.IS_AMBIGUOUS</code>.
     */
    public UnitProcessRecord setIsAmbiguous(Byte value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.UNIT_PROCESS.IS_AMBIGUOUS</code>.
     */
    public Byte getIsAmbiguous() {
        return (Byte) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UnitProcessRecord
     */
    public UnitProcessRecord() {
        super(UnitProcess.UNIT_PROCESS);
    }

    /**
     * Create a detached, initialised UnitProcessRecord
     */
    public UnitProcessRecord(Long unitProcessId, Long projectId, Integer versionMajorNumber, Integer versionMinorNumber, String unitProcessName, String functionType, LocalDateTime createdAt, LocalDateTime updatedAt, Byte isAmbiguous) {
        super(UnitProcess.UNIT_PROCESS);

        setUnitProcessId(unitProcessId);
        setProjectId(projectId);
        setVersionMajorNumber(versionMajorNumber);
        setVersionMinorNumber(versionMinorNumber);
        setUnitProcessName(unitProcessName);
        setFunctionType(functionType);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        setIsAmbiguous(isAmbiguous);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised UnitProcessRecord
     */
    public UnitProcessRecord(org.jooq.generated.tables.pojos.UnitProcess value) {
        super(UnitProcess.UNIT_PROCESS);

        if (value != null) {
            setUnitProcessId(value.getUnitProcessId());
            setProjectId(value.getProjectId());
            setVersionMajorNumber(value.getVersionMajorNumber());
            setVersionMinorNumber(value.getVersionMinorNumber());
            setUnitProcessName(value.getUnitProcessName());
            setFunctionType(value.getFunctionType());
            setCreatedAt(value.getCreatedAt());
            setUpdatedAt(value.getUpdatedAt());
            setIsAmbiguous(value.getIsAmbiguous());
            resetChangedOnNotNull();
        }
    }
}
