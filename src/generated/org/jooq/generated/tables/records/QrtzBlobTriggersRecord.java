/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import org.jooq.Record3;
import org.jooq.generated.tables.QrtzBlobTriggers;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QrtzBlobTriggersRecord extends UpdatableRecordImpl<QrtzBlobTriggersRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>scale_advisor.QRTZ_BLOB_TRIGGERS.SCHED_NAME</code>.
     */
    public QrtzBlobTriggersRecord setSchedName(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.QRTZ_BLOB_TRIGGERS.SCHED_NAME</code>.
     */
    public String getSchedName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>scale_advisor.QRTZ_BLOB_TRIGGERS.TRIGGER_NAME</code>.
     */
    public QrtzBlobTriggersRecord setTriggerName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.QRTZ_BLOB_TRIGGERS.TRIGGER_NAME</code>.
     */
    public String getTriggerName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>scale_advisor.QRTZ_BLOB_TRIGGERS.TRIGGER_GROUP</code>.
     */
    public QrtzBlobTriggersRecord setTriggerGroup(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.QRTZ_BLOB_TRIGGERS.TRIGGER_GROUP</code>.
     */
    public String getTriggerGroup() {
        return (String) get(2);
    }

    /**
     * Setter for <code>scale_advisor.QRTZ_BLOB_TRIGGERS.BLOB_DATA</code>.
     */
    public QrtzBlobTriggersRecord setBlobData(byte[] value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.QRTZ_BLOB_TRIGGERS.BLOB_DATA</code>.
     */
    public byte[] getBlobData() {
        return (byte[]) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record3<String, String, String> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached QrtzBlobTriggersRecord
     */
    public QrtzBlobTriggersRecord() {
        super(QrtzBlobTriggers.QRTZ_BLOB_TRIGGERS);
    }

    /**
     * Create a detached, initialised QrtzBlobTriggersRecord
     */
    public QrtzBlobTriggersRecord(String schedName, String triggerName, String triggerGroup, byte[] blobData) {
        super(QrtzBlobTriggers.QRTZ_BLOB_TRIGGERS);

        setSchedName(schedName);
        setTriggerName(triggerName);
        setTriggerGroup(triggerGroup);
        setBlobData(blobData);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised QrtzBlobTriggersRecord
     */
    public QrtzBlobTriggersRecord(org.jooq.generated.tables.pojos.QrtzBlobTriggers value) {
        super(QrtzBlobTriggers.QRTZ_BLOB_TRIGGERS);

        if (value != null) {
            setSchedName(value.getSchedName());
            setTriggerName(value.getTriggerName());
            setTriggerGroup(value.getTriggerGroup());
            setBlobData(value.getBlobData());
            resetChangedOnNotNull();
        }
    }
}
