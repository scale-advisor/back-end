/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.generated.tables.FpWeights;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FpWeightsRecord extends UpdatableRecordImpl<FpWeightsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>scale_advisor.FP_WEIGHTS.FP_WEIGHTS_ID</code>.
     */
    public FpWeightsRecord setFpWeightsId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.FP_WEIGHTS.FP_WEIGHTS_ID</code>.
     */
    public Long getFpWeightsId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>scale_advisor.FP_WEIGHTS.PROJECT_ID</code>.
     */
    public FpWeightsRecord setProjectId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.FP_WEIGHTS.PROJECT_ID</code>.
     */
    public Long getProjectId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>scale_advisor.FP_WEIGHTS.ILF_WEIGHT</code>.
     */
    public FpWeightsRecord setIlfWeight(BigDecimal value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.FP_WEIGHTS.ILF_WEIGHT</code>.
     */
    public BigDecimal getIlfWeight() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>scale_advisor.FP_WEIGHTS.EIF_WEIGHT</code>.
     */
    public FpWeightsRecord setEifWeight(BigDecimal value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.FP_WEIGHTS.EIF_WEIGHT</code>.
     */
    public BigDecimal getEifWeight() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>scale_advisor.FP_WEIGHTS.EI_WEIGHT</code>.
     */
    public FpWeightsRecord setEiWeight(BigDecimal value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.FP_WEIGHTS.EI_WEIGHT</code>.
     */
    public BigDecimal getEiWeight() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>scale_advisor.FP_WEIGHTS.EO_WEIGHT</code>.
     */
    public FpWeightsRecord setEoWeight(BigDecimal value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.FP_WEIGHTS.EO_WEIGHT</code>.
     */
    public BigDecimal getEoWeight() {
        return (BigDecimal) get(5);
    }

    /**
     * Setter for <code>scale_advisor.FP_WEIGHTS.EQ_WEIGHT</code>.
     */
    public FpWeightsRecord setEqWeight(BigDecimal value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.FP_WEIGHTS.EQ_WEIGHT</code>.
     */
    public BigDecimal getEqWeight() {
        return (BigDecimal) get(6);
    }

    /**
     * Setter for <code>scale_advisor.FP_WEIGHTS.CREATED_AT</code>.
     */
    public FpWeightsRecord setCreatedAt(LocalDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.FP_WEIGHTS.CREATED_AT</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>scale_advisor.FP_WEIGHTS.UPDATED_AT</code>.
     */
    public FpWeightsRecord setUpdatedAt(LocalDateTime value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.FP_WEIGHTS.UPDATED_AT</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FpWeightsRecord
     */
    public FpWeightsRecord() {
        super(FpWeights.FP_WEIGHTS);
    }

    /**
     * Create a detached, initialised FpWeightsRecord
     */
    public FpWeightsRecord(Long fpWeightsId, Long projectId, BigDecimal ilfWeight, BigDecimal eifWeight, BigDecimal eiWeight, BigDecimal eoWeight, BigDecimal eqWeight, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(FpWeights.FP_WEIGHTS);

        setFpWeightsId(fpWeightsId);
        setProjectId(projectId);
        setIlfWeight(ilfWeight);
        setEifWeight(eifWeight);
        setEiWeight(eiWeight);
        setEoWeight(eoWeight);
        setEqWeight(eqWeight);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised FpWeightsRecord
     */
    public FpWeightsRecord(org.jooq.generated.tables.pojos.FpWeights value) {
        super(FpWeights.FP_WEIGHTS);

        if (value != null) {
            setFpWeightsId(value.getFpWeightsId());
            setProjectId(value.getProjectId());
            setIlfWeight(value.getIlfWeight());
            setEifWeight(value.getEifWeight());
            setEiWeight(value.getEiWeight());
            setEoWeight(value.getEoWeight());
            setEqWeight(value.getEqWeight());
            setCreatedAt(value.getCreatedAt());
            setUpdatedAt(value.getUpdatedAt());
            resetChangedOnNotNull();
        }
    }
}
