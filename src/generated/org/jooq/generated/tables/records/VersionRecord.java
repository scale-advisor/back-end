/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import java.time.LocalDateTime;

import org.jooq.Record3;
import org.jooq.generated.tables.Version;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VersionRecord extends UpdatableRecordImpl<VersionRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>scale_advisor.VERSION.PROJECT_ID</code>.
     */
    public VersionRecord setProjectId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.VERSION.PROJECT_ID</code>.
     */
    public Long getProjectId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>scale_advisor.VERSION.VERSION_MAJOR_NUMBER</code>.
     */
    public VersionRecord setVersionMajorNumber(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.VERSION.VERSION_MAJOR_NUMBER</code>.
     */
    public Integer getVersionMajorNumber() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>scale_advisor.VERSION.VERSION_MINOR_NUMBER</code>.
     */
    public VersionRecord setVersionMinorNumber(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.VERSION.VERSION_MINOR_NUMBER</code>.
     */
    public Integer getVersionMinorNumber() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>scale_advisor.VERSION.CREATED_AT</code>.
     */
    public VersionRecord setCreatedAt(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>scale_advisor.VERSION.CREATED_AT</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record3<Long, Integer, Integer> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached VersionRecord
     */
    public VersionRecord() {
        super(Version.VERSION);
    }

    /**
     * Create a detached, initialised VersionRecord
     */
    public VersionRecord(Long projectId, Integer versionMajorNumber, Integer versionMinorNumber, LocalDateTime createdAt) {
        super(Version.VERSION);

        setProjectId(projectId);
        setVersionMajorNumber(versionMajorNumber);
        setVersionMinorNumber(versionMinorNumber);
        setCreatedAt(createdAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised VersionRecord
     */
    public VersionRecord(org.jooq.generated.tables.pojos.Version value) {
        super(Version.VERSION);

        if (value != null) {
            setProjectId(value.getProjectId());
            setVersionMajorNumber(value.getVersionMajorNumber());
            setVersionMinorNumber(value.getVersionMinorNumber());
            setCreatedAt(value.getCreatedAt());
            resetChangedOnNotNull();
        }
    }
}
