/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.generated.tables.CocomoScaleFactor;
import org.jooq.generated.tables.records.CocomoScaleFactorRecord;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CocomoScaleFactorDao extends DAOImpl<CocomoScaleFactorRecord, org.jooq.generated.tables.pojos.CocomoScaleFactor, Long> {

    /**
     * Create a new CocomoScaleFactorDao without any configuration
     */
    public CocomoScaleFactorDao() {
        super(CocomoScaleFactor.COCOMO_SCALE_FACTOR, org.jooq.generated.tables.pojos.CocomoScaleFactor.class);
    }

    /**
     * Create a new CocomoScaleFactorDao with an attached configuration
     */
    public CocomoScaleFactorDao(Configuration configuration) {
        super(CocomoScaleFactor.COCOMO_SCALE_FACTOR, org.jooq.generated.tables.pojos.CocomoScaleFactor.class, configuration);
    }

    @Override
    public Long getId(org.jooq.generated.tables.pojos.CocomoScaleFactor object) {
        return object.getCocomoScaleFactorId();
    }

    /**
     * Fetch records that have <code>COCOMO_SCALE_FACTOR_ID BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.CocomoScaleFactor> fetchRangeOfCocomoScaleFactorId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(CocomoScaleFactor.COCOMO_SCALE_FACTOR.COCOMO_SCALE_FACTOR_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>COCOMO_SCALE_FACTOR_ID IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.CocomoScaleFactor> fetchByCocomoScaleFactorId(Long... values) {
        return fetch(CocomoScaleFactor.COCOMO_SCALE_FACTOR.COCOMO_SCALE_FACTOR_ID, values);
    }

    /**
     * Fetch a unique record that has <code>COCOMO_SCALE_FACTOR_ID =
     * value</code>
     */
    public org.jooq.generated.tables.pojos.CocomoScaleFactor fetchOneByCocomoScaleFactorId(Long value) {
        return fetchOne(CocomoScaleFactor.COCOMO_SCALE_FACTOR.COCOMO_SCALE_FACTOR_ID, value);
    }

    /**
     * Fetch a unique record that has <code>COCOMO_SCALE_FACTOR_ID =
     * value</code>
     */
    public Optional<org.jooq.generated.tables.pojos.CocomoScaleFactor> fetchOptionalByCocomoScaleFactorId(Long value) {
        return fetchOptional(CocomoScaleFactor.COCOMO_SCALE_FACTOR.COCOMO_SCALE_FACTOR_ID, value);
    }

    /**
     * Fetch records that have <code>PROJECT_ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.CocomoScaleFactor> fetchRangeOfProjectId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(CocomoScaleFactor.COCOMO_SCALE_FACTOR.PROJECT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>PROJECT_ID IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.CocomoScaleFactor> fetchByProjectId(Long... values) {
        return fetch(CocomoScaleFactor.COCOMO_SCALE_FACTOR.PROJECT_ID, values);
    }

    /**
     * Fetch records that have <code>PREC BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.CocomoScaleFactor> fetchRangeOfPrec(String lowerInclusive, String upperInclusive) {
        return fetchRange(CocomoScaleFactor.COCOMO_SCALE_FACTOR.PREC, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>PREC IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.CocomoScaleFactor> fetchByPrec(String... values) {
        return fetch(CocomoScaleFactor.COCOMO_SCALE_FACTOR.PREC, values);
    }

    /**
     * Fetch records that have <code>FLEX BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.CocomoScaleFactor> fetchRangeOfFlex(String lowerInclusive, String upperInclusive) {
        return fetchRange(CocomoScaleFactor.COCOMO_SCALE_FACTOR.FLEX, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>FLEX IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.CocomoScaleFactor> fetchByFlex(String... values) {
        return fetch(CocomoScaleFactor.COCOMO_SCALE_FACTOR.FLEX, values);
    }

    /**
     * Fetch records that have <code>RESL BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.CocomoScaleFactor> fetchRangeOfResl(String lowerInclusive, String upperInclusive) {
        return fetchRange(CocomoScaleFactor.COCOMO_SCALE_FACTOR.RESL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>RESL IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.CocomoScaleFactor> fetchByResl(String... values) {
        return fetch(CocomoScaleFactor.COCOMO_SCALE_FACTOR.RESL, values);
    }

    /**
     * Fetch records that have <code>TEAM BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.CocomoScaleFactor> fetchRangeOfTeam(String lowerInclusive, String upperInclusive) {
        return fetchRange(CocomoScaleFactor.COCOMO_SCALE_FACTOR.TEAM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>TEAM IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.CocomoScaleFactor> fetchByTeam(String... values) {
        return fetch(CocomoScaleFactor.COCOMO_SCALE_FACTOR.TEAM, values);
    }

    /**
     * Fetch records that have <code>PMAT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.CocomoScaleFactor> fetchRangeOfPmat(String lowerInclusive, String upperInclusive) {
        return fetchRange(CocomoScaleFactor.COCOMO_SCALE_FACTOR.PMAT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>PMAT IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.CocomoScaleFactor> fetchByPmat(String... values) {
        return fetch(CocomoScaleFactor.COCOMO_SCALE_FACTOR.PMAT, values);
    }

    /**
     * Fetch records that have <code>CREATED_AT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.CocomoScaleFactor> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(CocomoScaleFactor.COCOMO_SCALE_FACTOR.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.CocomoScaleFactor> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(CocomoScaleFactor.COCOMO_SCALE_FACTOR.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.CocomoScaleFactor> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(CocomoScaleFactor.COCOMO_SCALE_FACTOR.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.CocomoScaleFactor> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(CocomoScaleFactor.COCOMO_SCALE_FACTOR.UPDATED_AT, values);
    }
}
