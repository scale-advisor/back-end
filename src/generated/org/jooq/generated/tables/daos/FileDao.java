/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.generated.tables.File;
import org.jooq.generated.tables.records.FileRecord;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FileDao extends DAOImpl<FileRecord, org.jooq.generated.tables.pojos.File, Long> {

    /**
     * Create a new FileDao without any configuration
     */
    public FileDao() {
        super(File.FILE, org.jooq.generated.tables.pojos.File.class);
    }

    /**
     * Create a new FileDao with an attached configuration
     */
    public FileDao(Configuration configuration) {
        super(File.FILE, org.jooq.generated.tables.pojos.File.class, configuration);
    }

    @Override
    public Long getId(org.jooq.generated.tables.pojos.File object) {
        return object.getFileId();
    }

    /**
     * Fetch records that have <code>FILE_ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.File> fetchRangeOfFileId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(File.FILE.FILE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>FILE_ID IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.File> fetchByFileId(Long... values) {
        return fetch(File.FILE.FILE_ID, values);
    }

    /**
     * Fetch a unique record that has <code>FILE_ID = value</code>
     */
    public org.jooq.generated.tables.pojos.File fetchOneByFileId(Long value) {
        return fetchOne(File.FILE.FILE_ID, value);
    }

    /**
     * Fetch a unique record that has <code>FILE_ID = value</code>
     */
    public Optional<org.jooq.generated.tables.pojos.File> fetchOptionalByFileId(Long value) {
        return fetchOptional(File.FILE.FILE_ID, value);
    }

    /**
     * Fetch records that have <code>PROJECT_ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.File> fetchRangeOfProjectId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(File.FILE.PROJECT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>PROJECT_ID IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.File> fetchByProjectId(Long... values) {
        return fetch(File.FILE.PROJECT_ID, values);
    }

    /**
     * Fetch records that have <code>VERSION_MAJOR_NUMBER BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.File> fetchRangeOfVersionMajorNumber(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(File.FILE.VERSION_MAJOR_NUMBER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>VERSION_MAJOR_NUMBER IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.File> fetchByVersionMajorNumber(Integer... values) {
        return fetch(File.FILE.VERSION_MAJOR_NUMBER, values);
    }

    /**
     * Fetch records that have <code>VERSION_MINOR_NUMBER BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.File> fetchRangeOfVersionMinorNumber(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(File.FILE.VERSION_MINOR_NUMBER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>VERSION_MINOR_NUMBER IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.File> fetchByVersionMinorNumber(Integer... values) {
        return fetch(File.FILE.VERSION_MINOR_NUMBER, values);
    }

    /**
     * Fetch records that have <code>TYPE BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.File> fetchRangeOfType(String lowerInclusive, String upperInclusive) {
        return fetchRange(File.FILE.TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>TYPE IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.File> fetchByType(String... values) {
        return fetch(File.FILE.TYPE, values);
    }

    /**
     * Fetch records that have <code>NAME BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.File> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(File.FILE.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>NAME IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.File> fetchByName(String... values) {
        return fetch(File.FILE.NAME, values);
    }

    /**
     * Fetch records that have <code>UPLOADER_ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.File> fetchRangeOfUploaderId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(File.FILE.UPLOADER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>UPLOADER_ID IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.File> fetchByUploaderId(Long... values) {
        return fetch(File.FILE.UPLOADER_ID, values);
    }

    /**
     * Fetch records that have <code>PATH BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.File> fetchRangeOfPath(String lowerInclusive, String upperInclusive) {
        return fetchRange(File.FILE.PATH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>PATH IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.File> fetchByPath(String... values) {
        return fetch(File.FILE.PATH, values);
    }

    /**
     * Fetch records that have <code>EXTENSION BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.File> fetchRangeOfExtension(String lowerInclusive, String upperInclusive) {
        return fetchRange(File.FILE.EXTENSION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>EXTENSION IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.File> fetchByExtension(String... values) {
        return fetch(File.FILE.EXTENSION, values);
    }

    /**
     * Fetch records that have <code>CREATED_AT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.File> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(File.FILE.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.File> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(File.FILE.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.File> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(File.FILE.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.File> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(File.FILE.UPDATED_AT, values);
    }
}
