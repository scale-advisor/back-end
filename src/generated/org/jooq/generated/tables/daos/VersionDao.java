/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.generated.tables.Version;
import org.jooq.generated.tables.records.VersionRecord;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VersionDao extends DAOImpl<VersionRecord, org.jooq.generated.tables.pojos.Version, Record2<Long, String>> {

    /**
     * Create a new VersionDao without any configuration
     */
    public VersionDao() {
        super(Version.VERSION, org.jooq.generated.tables.pojos.Version.class);
    }

    /**
     * Create a new VersionDao with an attached configuration
     */
    public VersionDao(Configuration configuration) {
        super(Version.VERSION, org.jooq.generated.tables.pojos.Version.class, configuration);
    }

    @Override
    public Record2<Long, String> getId(org.jooq.generated.tables.pojos.Version object) {
        return compositeKeyRecord(object.getProjectId(), object.getVersionNumber());
    }

    /**
     * Fetch records that have <code>PROJECT_ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Version> fetchRangeOfProjectId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Version.VERSION.PROJECT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>PROJECT_ID IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Version> fetchByProjectId(Long... values) {
        return fetch(Version.VERSION.PROJECT_ID, values);
    }

    /**
     * Fetch records that have <code>VERSION_NUMBER BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Version> fetchRangeOfVersionNumber(String lowerInclusive, String upperInclusive) {
        return fetchRange(Version.VERSION.VERSION_NUMBER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>VERSION_NUMBER IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Version> fetchByVersionNumber(String... values) {
        return fetch(Version.VERSION.VERSION_NUMBER, values);
    }

    /**
     * Fetch records that have <code>CREATED_AT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Version> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Version.VERSION.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Version> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(Version.VERSION.CREATED_AT, values);
    }
}
