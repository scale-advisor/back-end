/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.generated.tables.Invitation;
import org.jooq.generated.tables.records.InvitationRecord;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InvitationDao extends DAOImpl<InvitationRecord, org.jooq.generated.tables.pojos.Invitation, Record2<String, Long>> {

    /**
     * Create a new InvitationDao without any configuration
     */
    public InvitationDao() {
        super(Invitation.INVITATION, org.jooq.generated.tables.pojos.Invitation.class);
    }

    /**
     * Create a new InvitationDao with an attached configuration
     */
    public InvitationDao(Configuration configuration) {
        super(Invitation.INVITATION, org.jooq.generated.tables.pojos.Invitation.class, configuration);
    }

    @Override
    public Record2<String, Long> getId(org.jooq.generated.tables.pojos.Invitation object) {
        return compositeKeyRecord(object.getInvitationToken(), object.getProjectId());
    }

    /**
     * Fetch records that have <code>INVITATION_TOKEN BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Invitation> fetchRangeOfInvitationToken(String lowerInclusive, String upperInclusive) {
        return fetchRange(Invitation.INVITATION.INVITATION_TOKEN, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>INVITATION_TOKEN IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Invitation> fetchByInvitationToken(String... values) {
        return fetch(Invitation.INVITATION.INVITATION_TOKEN, values);
    }

    /**
     * Fetch records that have <code>PROJECT_ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Invitation> fetchRangeOfProjectId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Invitation.INVITATION.PROJECT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>PROJECT_ID IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Invitation> fetchByProjectId(Long... values) {
        return fetch(Invitation.INVITATION.PROJECT_ID, values);
    }

    /**
     * Fetch records that have <code>EXPIRE_DATE BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Invitation> fetchRangeOfExpireDate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Invitation.INVITATION.EXPIRE_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>EXPIRE_DATE IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Invitation> fetchByExpireDate(LocalDateTime... values) {
        return fetch(Invitation.INVITATION.EXPIRE_DATE, values);
    }
}
