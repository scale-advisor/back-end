/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.generated.tables.RequirementUnitProcess;
import org.jooq.generated.tables.records.RequirementUnitProcessRecord;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RequirementUnitProcessDao extends DAOImpl<RequirementUnitProcessRecord, org.jooq.generated.tables.pojos.RequirementUnitProcess, Record2<Long, Long>> {

    /**
     * Create a new RequirementUnitProcessDao without any configuration
     */
    public RequirementUnitProcessDao() {
        super(RequirementUnitProcess.REQUIREMENT_UNIT_PROCESS, org.jooq.generated.tables.pojos.RequirementUnitProcess.class);
    }

    /**
     * Create a new RequirementUnitProcessDao with an attached configuration
     */
    public RequirementUnitProcessDao(Configuration configuration) {
        super(RequirementUnitProcess.REQUIREMENT_UNIT_PROCESS, org.jooq.generated.tables.pojos.RequirementUnitProcess.class, configuration);
    }

    @Override
    public Record2<Long, Long> getId(org.jooq.generated.tables.pojos.RequirementUnitProcess object) {
        return compositeKeyRecord(object.getRequirementId(), object.getUnitProcessId());
    }

    /**
     * Fetch records that have <code>REQUIREMENT_ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.RequirementUnitProcess> fetchRangeOfRequirementId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(RequirementUnitProcess.REQUIREMENT_UNIT_PROCESS.REQUIREMENT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>REQUIREMENT_ID IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.RequirementUnitProcess> fetchByRequirementId(Long... values) {
        return fetch(RequirementUnitProcess.REQUIREMENT_UNIT_PROCESS.REQUIREMENT_ID, values);
    }

    /**
     * Fetch records that have <code>UNIT_PROCESS_ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.RequirementUnitProcess> fetchRangeOfUnitProcessId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(RequirementUnitProcess.REQUIREMENT_UNIT_PROCESS.UNIT_PROCESS_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>UNIT_PROCESS_ID IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.RequirementUnitProcess> fetchByUnitProcessId(Long... values) {
        return fetch(RequirementUnitProcess.REQUIREMENT_UNIT_PROCESS.UNIT_PROCESS_ID, values);
    }

    /**
     * Fetch records that have <code>CREATED_AT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.RequirementUnitProcess> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(RequirementUnitProcess.REQUIREMENT_UNIT_PROCESS.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.RequirementUnitProcess> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(RequirementUnitProcess.REQUIREMENT_UNIT_PROCESS.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.RequirementUnitProcess> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(RequirementUnitProcess.REQUIREMENT_UNIT_PROCESS.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.RequirementUnitProcess> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(RequirementUnitProcess.REQUIREMENT_UNIT_PROCESS.UPDATED_AT, values);
    }
}
