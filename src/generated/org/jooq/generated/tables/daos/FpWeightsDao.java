/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.generated.tables.FpWeights;
import org.jooq.generated.tables.records.FpWeightsRecord;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FpWeightsDao extends DAOImpl<FpWeightsRecord, org.jooq.generated.tables.pojos.FpWeights, Long> {

    /**
     * Create a new FpWeightsDao without any configuration
     */
    public FpWeightsDao() {
        super(FpWeights.FP_WEIGHTS, org.jooq.generated.tables.pojos.FpWeights.class);
    }

    /**
     * Create a new FpWeightsDao with an attached configuration
     */
    public FpWeightsDao(Configuration configuration) {
        super(FpWeights.FP_WEIGHTS, org.jooq.generated.tables.pojos.FpWeights.class, configuration);
    }

    @Override
    public Long getId(org.jooq.generated.tables.pojos.FpWeights object) {
        return object.getFpWeightsId();
    }

    /**
     * Fetch records that have <code>FP_WEIGHTS_ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.FpWeights> fetchRangeOfFpWeightsId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(FpWeights.FP_WEIGHTS.FP_WEIGHTS_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>FP_WEIGHTS_ID IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.FpWeights> fetchByFpWeightsId(Long... values) {
        return fetch(FpWeights.FP_WEIGHTS.FP_WEIGHTS_ID, values);
    }

    /**
     * Fetch a unique record that has <code>FP_WEIGHTS_ID = value</code>
     */
    public org.jooq.generated.tables.pojos.FpWeights fetchOneByFpWeightsId(Long value) {
        return fetchOne(FpWeights.FP_WEIGHTS.FP_WEIGHTS_ID, value);
    }

    /**
     * Fetch a unique record that has <code>FP_WEIGHTS_ID = value</code>
     */
    public Optional<org.jooq.generated.tables.pojos.FpWeights> fetchOptionalByFpWeightsId(Long value) {
        return fetchOptional(FpWeights.FP_WEIGHTS.FP_WEIGHTS_ID, value);
    }

    /**
     * Fetch records that have <code>PROJECT_ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.FpWeights> fetchRangeOfProjectId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(FpWeights.FP_WEIGHTS.PROJECT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>PROJECT_ID IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.FpWeights> fetchByProjectId(Long... values) {
        return fetch(FpWeights.FP_WEIGHTS.PROJECT_ID, values);
    }

    /**
     * Fetch records that have <code>ILF_WEIGHT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.FpWeights> fetchRangeOfIlfWeight(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(FpWeights.FP_WEIGHTS.ILF_WEIGHT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ILF_WEIGHT IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.FpWeights> fetchByIlfWeight(BigDecimal... values) {
        return fetch(FpWeights.FP_WEIGHTS.ILF_WEIGHT, values);
    }

    /**
     * Fetch records that have <code>EIF_WEIGHT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.FpWeights> fetchRangeOfEifWeight(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(FpWeights.FP_WEIGHTS.EIF_WEIGHT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>EIF_WEIGHT IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.FpWeights> fetchByEifWeight(BigDecimal... values) {
        return fetch(FpWeights.FP_WEIGHTS.EIF_WEIGHT, values);
    }

    /**
     * Fetch records that have <code>EI_WEIGHT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.FpWeights> fetchRangeOfEiWeight(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(FpWeights.FP_WEIGHTS.EI_WEIGHT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>EI_WEIGHT IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.FpWeights> fetchByEiWeight(BigDecimal... values) {
        return fetch(FpWeights.FP_WEIGHTS.EI_WEIGHT, values);
    }

    /**
     * Fetch records that have <code>EO_WEIGHT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.FpWeights> fetchRangeOfEoWeight(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(FpWeights.FP_WEIGHTS.EO_WEIGHT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>EO_WEIGHT IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.FpWeights> fetchByEoWeight(BigDecimal... values) {
        return fetch(FpWeights.FP_WEIGHTS.EO_WEIGHT, values);
    }

    /**
     * Fetch records that have <code>EQ_WEIGHT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.FpWeights> fetchRangeOfEqWeight(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(FpWeights.FP_WEIGHTS.EQ_WEIGHT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>EQ_WEIGHT IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.FpWeights> fetchByEqWeight(BigDecimal... values) {
        return fetch(FpWeights.FP_WEIGHTS.EQ_WEIGHT, values);
    }

    /**
     * Fetch records that have <code>CREATED_AT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.FpWeights> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(FpWeights.FP_WEIGHTS.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.FpWeights> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(FpWeights.FP_WEIGHTS.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.FpWeights> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(FpWeights.FP_WEIGHTS.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.FpWeights> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(FpWeights.FP_WEIGHTS.UPDATED_AT, values);
    }
}
