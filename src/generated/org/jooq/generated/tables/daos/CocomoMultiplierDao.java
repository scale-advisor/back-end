/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.generated.tables.CocomoMultiplier;
import org.jooq.generated.tables.records.CocomoMultiplierRecord;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CocomoMultiplierDao extends DAOImpl<CocomoMultiplierRecord, org.jooq.generated.tables.pojos.CocomoMultiplier, Long> {

    /**
     * Create a new CocomoMultiplierDao without any configuration
     */
    public CocomoMultiplierDao() {
        super(CocomoMultiplier.COCOMO_MULTIPLIER, org.jooq.generated.tables.pojos.CocomoMultiplier.class);
    }

    /**
     * Create a new CocomoMultiplierDao with an attached configuration
     */
    public CocomoMultiplierDao(Configuration configuration) {
        super(CocomoMultiplier.COCOMO_MULTIPLIER, org.jooq.generated.tables.pojos.CocomoMultiplier.class, configuration);
    }

    @Override
    public Long getId(org.jooq.generated.tables.pojos.CocomoMultiplier object) {
        return object.getCocomoMultiplierId();
    }

    /**
     * Fetch records that have <code>COCOMO_MULTIPLIER_ID BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.CocomoMultiplier> fetchRangeOfCocomoMultiplierId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(CocomoMultiplier.COCOMO_MULTIPLIER.COCOMO_MULTIPLIER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>COCOMO_MULTIPLIER_ID IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.CocomoMultiplier> fetchByCocomoMultiplierId(Long... values) {
        return fetch(CocomoMultiplier.COCOMO_MULTIPLIER.COCOMO_MULTIPLIER_ID, values);
    }

    /**
     * Fetch a unique record that has <code>COCOMO_MULTIPLIER_ID = value</code>
     */
    public org.jooq.generated.tables.pojos.CocomoMultiplier fetchOneByCocomoMultiplierId(Long value) {
        return fetchOne(CocomoMultiplier.COCOMO_MULTIPLIER.COCOMO_MULTIPLIER_ID, value);
    }

    /**
     * Fetch a unique record that has <code>COCOMO_MULTIPLIER_ID = value</code>
     */
    public Optional<org.jooq.generated.tables.pojos.CocomoMultiplier> fetchOptionalByCocomoMultiplierId(Long value) {
        return fetchOptional(CocomoMultiplier.COCOMO_MULTIPLIER.COCOMO_MULTIPLIER_ID, value);
    }

    /**
     * Fetch records that have <code>PROJECT_ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.CocomoMultiplier> fetchRangeOfProjectId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(CocomoMultiplier.COCOMO_MULTIPLIER.PROJECT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>PROJECT_ID IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.CocomoMultiplier> fetchByProjectId(Long... values) {
        return fetch(CocomoMultiplier.COCOMO_MULTIPLIER.PROJECT_ID, values);
    }

    /**
     * Fetch records that have <code>RCPX BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.CocomoMultiplier> fetchRangeOfRcpx(String lowerInclusive, String upperInclusive) {
        return fetchRange(CocomoMultiplier.COCOMO_MULTIPLIER.RCPX, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>RCPX IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.CocomoMultiplier> fetchByRcpx(String... values) {
        return fetch(CocomoMultiplier.COCOMO_MULTIPLIER.RCPX, values);
    }

    /**
     * Fetch records that have <code>RUSE BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.CocomoMultiplier> fetchRangeOfRuse(String lowerInclusive, String upperInclusive) {
        return fetchRange(CocomoMultiplier.COCOMO_MULTIPLIER.RUSE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>RUSE IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.CocomoMultiplier> fetchByRuse(String... values) {
        return fetch(CocomoMultiplier.COCOMO_MULTIPLIER.RUSE, values);
    }

    /**
     * Fetch records that have <code>PDIF BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.CocomoMultiplier> fetchRangeOfPdif(String lowerInclusive, String upperInclusive) {
        return fetchRange(CocomoMultiplier.COCOMO_MULTIPLIER.PDIF, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>PDIF IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.CocomoMultiplier> fetchByPdif(String... values) {
        return fetch(CocomoMultiplier.COCOMO_MULTIPLIER.PDIF, values);
    }

    /**
     * Fetch records that have <code>PERS BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.CocomoMultiplier> fetchRangeOfPers(String lowerInclusive, String upperInclusive) {
        return fetchRange(CocomoMultiplier.COCOMO_MULTIPLIER.PERS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>PERS IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.CocomoMultiplier> fetchByPers(String... values) {
        return fetch(CocomoMultiplier.COCOMO_MULTIPLIER.PERS, values);
    }

    /**
     * Fetch records that have <code>SCED BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.CocomoMultiplier> fetchRangeOfSced(String lowerInclusive, String upperInclusive) {
        return fetchRange(CocomoMultiplier.COCOMO_MULTIPLIER.SCED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>SCED IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.CocomoMultiplier> fetchBySced(String... values) {
        return fetch(CocomoMultiplier.COCOMO_MULTIPLIER.SCED, values);
    }

    /**
     * Fetch records that have <code>FCIL BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.CocomoMultiplier> fetchRangeOfFcil(String lowerInclusive, String upperInclusive) {
        return fetchRange(CocomoMultiplier.COCOMO_MULTIPLIER.FCIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>FCIL IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.CocomoMultiplier> fetchByFcil(String... values) {
        return fetch(CocomoMultiplier.COCOMO_MULTIPLIER.FCIL, values);
    }

    /**
     * Fetch records that have <code>CREATED_AT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.CocomoMultiplier> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(CocomoMultiplier.COCOMO_MULTIPLIER.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.CocomoMultiplier> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(CocomoMultiplier.COCOMO_MULTIPLIER.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.CocomoMultiplier> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(CocomoMultiplier.COCOMO_MULTIPLIER.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.CocomoMultiplier> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(CocomoMultiplier.COCOMO_MULTIPLIER.UPDATED_AT, values);
    }
}
