/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.util.List;

import org.jooq.Configuration;
import org.jooq.Record3;
import org.jooq.generated.tables.QrtzCronTriggers;
import org.jooq.generated.tables.records.QrtzCronTriggersRecord;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QrtzCronTriggersDao extends DAOImpl<QrtzCronTriggersRecord, org.jooq.generated.tables.pojos.QrtzCronTriggers, Record3<String, String, String>> {

    /**
     * Create a new QrtzCronTriggersDao without any configuration
     */
    public QrtzCronTriggersDao() {
        super(QrtzCronTriggers.QRTZ_CRON_TRIGGERS, org.jooq.generated.tables.pojos.QrtzCronTriggers.class);
    }

    /**
     * Create a new QrtzCronTriggersDao with an attached configuration
     */
    public QrtzCronTriggersDao(Configuration configuration) {
        super(QrtzCronTriggers.QRTZ_CRON_TRIGGERS, org.jooq.generated.tables.pojos.QrtzCronTriggers.class, configuration);
    }

    @Override
    public Record3<String, String, String> getId(org.jooq.generated.tables.pojos.QrtzCronTriggers object) {
        return compositeKeyRecord(object.getSchedName(), object.getTriggerName(), object.getTriggerGroup());
    }

    /**
     * Fetch records that have <code>SCHED_NAME BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.QrtzCronTriggers> fetchRangeOfSchedName(String lowerInclusive, String upperInclusive) {
        return fetchRange(QrtzCronTriggers.QRTZ_CRON_TRIGGERS.SCHED_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>SCHED_NAME IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.QrtzCronTriggers> fetchBySchedName(String... values) {
        return fetch(QrtzCronTriggers.QRTZ_CRON_TRIGGERS.SCHED_NAME, values);
    }

    /**
     * Fetch records that have <code>TRIGGER_NAME BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.QrtzCronTriggers> fetchRangeOfTriggerName(String lowerInclusive, String upperInclusive) {
        return fetchRange(QrtzCronTriggers.QRTZ_CRON_TRIGGERS.TRIGGER_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>TRIGGER_NAME IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.QrtzCronTriggers> fetchByTriggerName(String... values) {
        return fetch(QrtzCronTriggers.QRTZ_CRON_TRIGGERS.TRIGGER_NAME, values);
    }

    /**
     * Fetch records that have <code>TRIGGER_GROUP BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.QrtzCronTriggers> fetchRangeOfTriggerGroup(String lowerInclusive, String upperInclusive) {
        return fetchRange(QrtzCronTriggers.QRTZ_CRON_TRIGGERS.TRIGGER_GROUP, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>TRIGGER_GROUP IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.QrtzCronTriggers> fetchByTriggerGroup(String... values) {
        return fetch(QrtzCronTriggers.QRTZ_CRON_TRIGGERS.TRIGGER_GROUP, values);
    }

    /**
     * Fetch records that have <code>CRON_EXPRESSION BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.QrtzCronTriggers> fetchRangeOfCronExpression(String lowerInclusive, String upperInclusive) {
        return fetchRange(QrtzCronTriggers.QRTZ_CRON_TRIGGERS.CRON_EXPRESSION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CRON_EXPRESSION IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.QrtzCronTriggers> fetchByCronExpression(String... values) {
        return fetch(QrtzCronTriggers.QRTZ_CRON_TRIGGERS.CRON_EXPRESSION, values);
    }

    /**
     * Fetch records that have <code>TIME_ZONE_ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.QrtzCronTriggers> fetchRangeOfTimeZoneId(String lowerInclusive, String upperInclusive) {
        return fetchRange(QrtzCronTriggers.QRTZ_CRON_TRIGGERS.TIME_ZONE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>TIME_ZONE_ID IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.QrtzCronTriggers> fetchByTimeZoneId(String... values) {
        return fetch(QrtzCronTriggers.QRTZ_CRON_TRIGGERS.TIME_ZONE_ID, values);
    }
}
