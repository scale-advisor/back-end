/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.generated.tables.ProjectLanguage;
import org.jooq.generated.tables.records.ProjectLanguageRecord;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProjectLanguageDao extends DAOImpl<ProjectLanguageRecord, org.jooq.generated.tables.pojos.ProjectLanguage, Long> {

    /**
     * Create a new ProjectLanguageDao without any configuration
     */
    public ProjectLanguageDao() {
        super(ProjectLanguage.PROJECT_LANGUAGE, org.jooq.generated.tables.pojos.ProjectLanguage.class);
    }

    /**
     * Create a new ProjectLanguageDao with an attached configuration
     */
    public ProjectLanguageDao(Configuration configuration) {
        super(ProjectLanguage.PROJECT_LANGUAGE, org.jooq.generated.tables.pojos.ProjectLanguage.class, configuration);
    }

    @Override
    public Long getId(org.jooq.generated.tables.pojos.ProjectLanguage object) {
        return object.getProjectLanguageId();
    }

    /**
     * Fetch records that have <code>PROJECT_LANGUAGE_ID BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.ProjectLanguage> fetchRangeOfProjectLanguageId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(ProjectLanguage.PROJECT_LANGUAGE.PROJECT_LANGUAGE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>PROJECT_LANGUAGE_ID IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.ProjectLanguage> fetchByProjectLanguageId(Long... values) {
        return fetch(ProjectLanguage.PROJECT_LANGUAGE.PROJECT_LANGUAGE_ID, values);
    }

    /**
     * Fetch a unique record that has <code>PROJECT_LANGUAGE_ID = value</code>
     */
    public org.jooq.generated.tables.pojos.ProjectLanguage fetchOneByProjectLanguageId(Long value) {
        return fetchOne(ProjectLanguage.PROJECT_LANGUAGE.PROJECT_LANGUAGE_ID, value);
    }

    /**
     * Fetch a unique record that has <code>PROJECT_LANGUAGE_ID = value</code>
     */
    public Optional<org.jooq.generated.tables.pojos.ProjectLanguage> fetchOptionalByProjectLanguageId(Long value) {
        return fetchOptional(ProjectLanguage.PROJECT_LANGUAGE.PROJECT_LANGUAGE_ID, value);
    }

    /**
     * Fetch records that have <code>PROJECT_ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.ProjectLanguage> fetchRangeOfProjectId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(ProjectLanguage.PROJECT_LANGUAGE.PROJECT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>PROJECT_ID IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.ProjectLanguage> fetchByProjectId(Long... values) {
        return fetch(ProjectLanguage.PROJECT_LANGUAGE.PROJECT_ID, values);
    }

    /**
     * Fetch records that have <code>LANGUAGE BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.ProjectLanguage> fetchRangeOfLanguage(String lowerInclusive, String upperInclusive) {
        return fetchRange(ProjectLanguage.PROJECT_LANGUAGE.LANGUAGE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.ProjectLanguage> fetchByLanguage(String... values) {
        return fetch(ProjectLanguage.PROJECT_LANGUAGE.LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>RATE BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.ProjectLanguage> fetchRangeOfRate(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(ProjectLanguage.PROJECT_LANGUAGE.RATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>RATE IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.ProjectLanguage> fetchByRate(Integer... values) {
        return fetch(ProjectLanguage.PROJECT_LANGUAGE.RATE, values);
    }

    /**
     * Fetch records that have <code>CREATED_AT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.ProjectLanguage> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(ProjectLanguage.PROJECT_LANGUAGE.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.ProjectLanguage> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(ProjectLanguage.PROJECT_LANGUAGE.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.ProjectLanguage> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(ProjectLanguage.PROJECT_LANGUAGE.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.ProjectLanguage> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(ProjectLanguage.PROJECT_LANGUAGE.UPDATED_AT, values);
    }
}
