/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.generated.tables.BatchStepExecution;
import org.jooq.generated.tables.records.BatchStepExecutionRecord;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BatchStepExecutionDao extends DAOImpl<BatchStepExecutionRecord, org.jooq.generated.tables.pojos.BatchStepExecution, Long> {

    /**
     * Create a new BatchStepExecutionDao without any configuration
     */
    public BatchStepExecutionDao() {
        super(BatchStepExecution.BATCH_STEP_EXECUTION, org.jooq.generated.tables.pojos.BatchStepExecution.class);
    }

    /**
     * Create a new BatchStepExecutionDao with an attached configuration
     */
    public BatchStepExecutionDao(Configuration configuration) {
        super(BatchStepExecution.BATCH_STEP_EXECUTION, org.jooq.generated.tables.pojos.BatchStepExecution.class, configuration);
    }

    @Override
    public Long getId(org.jooq.generated.tables.pojos.BatchStepExecution object) {
        return object.getStepExecutionId();
    }

    /**
     * Fetch records that have <code>STEP_EXECUTION_ID BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.BatchStepExecution> fetchRangeOfStepExecutionId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(BatchStepExecution.BATCH_STEP_EXECUTION.STEP_EXECUTION_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>STEP_EXECUTION_ID IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.BatchStepExecution> fetchByStepExecutionId(Long... values) {
        return fetch(BatchStepExecution.BATCH_STEP_EXECUTION.STEP_EXECUTION_ID, values);
    }

    /**
     * Fetch a unique record that has <code>STEP_EXECUTION_ID = value</code>
     */
    public org.jooq.generated.tables.pojos.BatchStepExecution fetchOneByStepExecutionId(Long value) {
        return fetchOne(BatchStepExecution.BATCH_STEP_EXECUTION.STEP_EXECUTION_ID, value);
    }

    /**
     * Fetch a unique record that has <code>STEP_EXECUTION_ID = value</code>
     */
    public Optional<org.jooq.generated.tables.pojos.BatchStepExecution> fetchOptionalByStepExecutionId(Long value) {
        return fetchOptional(BatchStepExecution.BATCH_STEP_EXECUTION.STEP_EXECUTION_ID, value);
    }

    /**
     * Fetch records that have <code>VERSION BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.BatchStepExecution> fetchRangeOfVersion(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(BatchStepExecution.BATCH_STEP_EXECUTION.VERSION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>VERSION IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.BatchStepExecution> fetchByVersion(Long... values) {
        return fetch(BatchStepExecution.BATCH_STEP_EXECUTION.VERSION, values);
    }

    /**
     * Fetch records that have <code>STEP_NAME BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.BatchStepExecution> fetchRangeOfStepName(String lowerInclusive, String upperInclusive) {
        return fetchRange(BatchStepExecution.BATCH_STEP_EXECUTION.STEP_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>STEP_NAME IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.BatchStepExecution> fetchByStepName(String... values) {
        return fetch(BatchStepExecution.BATCH_STEP_EXECUTION.STEP_NAME, values);
    }

    /**
     * Fetch records that have <code>JOB_EXECUTION_ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.BatchStepExecution> fetchRangeOfJobExecutionId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(BatchStepExecution.BATCH_STEP_EXECUTION.JOB_EXECUTION_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>JOB_EXECUTION_ID IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.BatchStepExecution> fetchByJobExecutionId(Long... values) {
        return fetch(BatchStepExecution.BATCH_STEP_EXECUTION.JOB_EXECUTION_ID, values);
    }

    /**
     * Fetch records that have <code>CREATE_TIME BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.BatchStepExecution> fetchRangeOfCreateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(BatchStepExecution.BATCH_STEP_EXECUTION.CREATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CREATE_TIME IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.BatchStepExecution> fetchByCreateTime(LocalDateTime... values) {
        return fetch(BatchStepExecution.BATCH_STEP_EXECUTION.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>START_TIME BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.BatchStepExecution> fetchRangeOfStartTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(BatchStepExecution.BATCH_STEP_EXECUTION.START_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>START_TIME IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.BatchStepExecution> fetchByStartTime(LocalDateTime... values) {
        return fetch(BatchStepExecution.BATCH_STEP_EXECUTION.START_TIME, values);
    }

    /**
     * Fetch records that have <code>END_TIME BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.BatchStepExecution> fetchRangeOfEndTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(BatchStepExecution.BATCH_STEP_EXECUTION.END_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>END_TIME IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.BatchStepExecution> fetchByEndTime(LocalDateTime... values) {
        return fetch(BatchStepExecution.BATCH_STEP_EXECUTION.END_TIME, values);
    }

    /**
     * Fetch records that have <code>STATUS BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.BatchStepExecution> fetchRangeOfStatus(String lowerInclusive, String upperInclusive) {
        return fetchRange(BatchStepExecution.BATCH_STEP_EXECUTION.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>STATUS IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.BatchStepExecution> fetchByStatus(String... values) {
        return fetch(BatchStepExecution.BATCH_STEP_EXECUTION.STATUS, values);
    }

    /**
     * Fetch records that have <code>COMMIT_COUNT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.BatchStepExecution> fetchRangeOfCommitCount(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(BatchStepExecution.BATCH_STEP_EXECUTION.COMMIT_COUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>COMMIT_COUNT IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.BatchStepExecution> fetchByCommitCount(Long... values) {
        return fetch(BatchStepExecution.BATCH_STEP_EXECUTION.COMMIT_COUNT, values);
    }

    /**
     * Fetch records that have <code>READ_COUNT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.BatchStepExecution> fetchRangeOfReadCount(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(BatchStepExecution.BATCH_STEP_EXECUTION.READ_COUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>READ_COUNT IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.BatchStepExecution> fetchByReadCount(Long... values) {
        return fetch(BatchStepExecution.BATCH_STEP_EXECUTION.READ_COUNT, values);
    }

    /**
     * Fetch records that have <code>FILTER_COUNT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.BatchStepExecution> fetchRangeOfFilterCount(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(BatchStepExecution.BATCH_STEP_EXECUTION.FILTER_COUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>FILTER_COUNT IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.BatchStepExecution> fetchByFilterCount(Long... values) {
        return fetch(BatchStepExecution.BATCH_STEP_EXECUTION.FILTER_COUNT, values);
    }

    /**
     * Fetch records that have <code>WRITE_COUNT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.BatchStepExecution> fetchRangeOfWriteCount(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(BatchStepExecution.BATCH_STEP_EXECUTION.WRITE_COUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>WRITE_COUNT IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.BatchStepExecution> fetchByWriteCount(Long... values) {
        return fetch(BatchStepExecution.BATCH_STEP_EXECUTION.WRITE_COUNT, values);
    }

    /**
     * Fetch records that have <code>READ_SKIP_COUNT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.BatchStepExecution> fetchRangeOfReadSkipCount(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(BatchStepExecution.BATCH_STEP_EXECUTION.READ_SKIP_COUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>READ_SKIP_COUNT IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.BatchStepExecution> fetchByReadSkipCount(Long... values) {
        return fetch(BatchStepExecution.BATCH_STEP_EXECUTION.READ_SKIP_COUNT, values);
    }

    /**
     * Fetch records that have <code>WRITE_SKIP_COUNT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.BatchStepExecution> fetchRangeOfWriteSkipCount(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(BatchStepExecution.BATCH_STEP_EXECUTION.WRITE_SKIP_COUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>WRITE_SKIP_COUNT IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.BatchStepExecution> fetchByWriteSkipCount(Long... values) {
        return fetch(BatchStepExecution.BATCH_STEP_EXECUTION.WRITE_SKIP_COUNT, values);
    }

    /**
     * Fetch records that have <code>PROCESS_SKIP_COUNT BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.BatchStepExecution> fetchRangeOfProcessSkipCount(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(BatchStepExecution.BATCH_STEP_EXECUTION.PROCESS_SKIP_COUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>PROCESS_SKIP_COUNT IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.BatchStepExecution> fetchByProcessSkipCount(Long... values) {
        return fetch(BatchStepExecution.BATCH_STEP_EXECUTION.PROCESS_SKIP_COUNT, values);
    }

    /**
     * Fetch records that have <code>ROLLBACK_COUNT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.BatchStepExecution> fetchRangeOfRollbackCount(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(BatchStepExecution.BATCH_STEP_EXECUTION.ROLLBACK_COUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ROLLBACK_COUNT IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.BatchStepExecution> fetchByRollbackCount(Long... values) {
        return fetch(BatchStepExecution.BATCH_STEP_EXECUTION.ROLLBACK_COUNT, values);
    }

    /**
     * Fetch records that have <code>EXIT_CODE BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.BatchStepExecution> fetchRangeOfExitCode(String lowerInclusive, String upperInclusive) {
        return fetchRange(BatchStepExecution.BATCH_STEP_EXECUTION.EXIT_CODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>EXIT_CODE IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.BatchStepExecution> fetchByExitCode(String... values) {
        return fetch(BatchStepExecution.BATCH_STEP_EXECUTION.EXIT_CODE, values);
    }

    /**
     * Fetch records that have <code>EXIT_MESSAGE BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.BatchStepExecution> fetchRangeOfExitMessage(String lowerInclusive, String upperInclusive) {
        return fetchRange(BatchStepExecution.BATCH_STEP_EXECUTION.EXIT_MESSAGE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>EXIT_MESSAGE IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.BatchStepExecution> fetchByExitMessage(String... values) {
        return fetch(BatchStepExecution.BATCH_STEP_EXECUTION.EXIT_MESSAGE, values);
    }

    /**
     * Fetch records that have <code>LAST_UPDATED BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.BatchStepExecution> fetchRangeOfLastUpdated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(BatchStepExecution.BATCH_STEP_EXECUTION.LAST_UPDATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>LAST_UPDATED IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.BatchStepExecution> fetchByLastUpdated(LocalDateTime... values) {
        return fetch(BatchStepExecution.BATCH_STEP_EXECUTION.LAST_UPDATED, values);
    }
}
