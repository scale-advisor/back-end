/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.generated.tables.BatchJobExecutionContext;
import org.jooq.generated.tables.records.BatchJobExecutionContextRecord;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BatchJobExecutionContextDao extends DAOImpl<BatchJobExecutionContextRecord, org.jooq.generated.tables.pojos.BatchJobExecutionContext, Long> {

    /**
     * Create a new BatchJobExecutionContextDao without any configuration
     */
    public BatchJobExecutionContextDao() {
        super(BatchJobExecutionContext.BATCH_JOB_EXECUTION_CONTEXT, org.jooq.generated.tables.pojos.BatchJobExecutionContext.class);
    }

    /**
     * Create a new BatchJobExecutionContextDao with an attached configuration
     */
    public BatchJobExecutionContextDao(Configuration configuration) {
        super(BatchJobExecutionContext.BATCH_JOB_EXECUTION_CONTEXT, org.jooq.generated.tables.pojos.BatchJobExecutionContext.class, configuration);
    }

    @Override
    public Long getId(org.jooq.generated.tables.pojos.BatchJobExecutionContext object) {
        return object.getJobExecutionId();
    }

    /**
     * Fetch records that have <code>JOB_EXECUTION_ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.BatchJobExecutionContext> fetchRangeOfJobExecutionId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(BatchJobExecutionContext.BATCH_JOB_EXECUTION_CONTEXT.JOB_EXECUTION_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>JOB_EXECUTION_ID IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.BatchJobExecutionContext> fetchByJobExecutionId(Long... values) {
        return fetch(BatchJobExecutionContext.BATCH_JOB_EXECUTION_CONTEXT.JOB_EXECUTION_ID, values);
    }

    /**
     * Fetch a unique record that has <code>JOB_EXECUTION_ID = value</code>
     */
    public org.jooq.generated.tables.pojos.BatchJobExecutionContext fetchOneByJobExecutionId(Long value) {
        return fetchOne(BatchJobExecutionContext.BATCH_JOB_EXECUTION_CONTEXT.JOB_EXECUTION_ID, value);
    }

    /**
     * Fetch a unique record that has <code>JOB_EXECUTION_ID = value</code>
     */
    public Optional<org.jooq.generated.tables.pojos.BatchJobExecutionContext> fetchOptionalByJobExecutionId(Long value) {
        return fetchOptional(BatchJobExecutionContext.BATCH_JOB_EXECUTION_CONTEXT.JOB_EXECUTION_ID, value);
    }

    /**
     * Fetch records that have <code>SHORT_CONTEXT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.BatchJobExecutionContext> fetchRangeOfShortContext(String lowerInclusive, String upperInclusive) {
        return fetchRange(BatchJobExecutionContext.BATCH_JOB_EXECUTION_CONTEXT.SHORT_CONTEXT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>SHORT_CONTEXT IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.BatchJobExecutionContext> fetchByShortContext(String... values) {
        return fetch(BatchJobExecutionContext.BATCH_JOB_EXECUTION_CONTEXT.SHORT_CONTEXT, values);
    }

    /**
     * Fetch records that have <code>SERIALIZED_CONTEXT BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.BatchJobExecutionContext> fetchRangeOfSerializedContext(String lowerInclusive, String upperInclusive) {
        return fetchRange(BatchJobExecutionContext.BATCH_JOB_EXECUTION_CONTEXT.SERIALIZED_CONTEXT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>SERIALIZED_CONTEXT IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.BatchJobExecutionContext> fetchBySerializedContext(String... values) {
        return fetch(BatchJobExecutionContext.BATCH_JOB_EXECUTION_CONTEXT.SERIALIZED_CONTEXT, values);
    }
}
