/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.generated.tables.ProjectFactor;
import org.jooq.generated.tables.records.ProjectFactorRecord;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProjectFactorDao extends DAOImpl<ProjectFactorRecord, org.jooq.generated.tables.pojos.ProjectFactor, Long> {

    /**
     * Create a new ProjectFactorDao without any configuration
     */
    public ProjectFactorDao() {
        super(ProjectFactor.PROJECT_FACTOR, org.jooq.generated.tables.pojos.ProjectFactor.class);
    }

    /**
     * Create a new ProjectFactorDao with an attached configuration
     */
    public ProjectFactorDao(Configuration configuration) {
        super(ProjectFactor.PROJECT_FACTOR, org.jooq.generated.tables.pojos.ProjectFactor.class, configuration);
    }

    @Override
    public Long getId(org.jooq.generated.tables.pojos.ProjectFactor object) {
        return object.getProjectFactorId();
    }

    /**
     * Fetch records that have <code>PROJECT_FACTOR_ID BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.ProjectFactor> fetchRangeOfProjectFactorId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(ProjectFactor.PROJECT_FACTOR.PROJECT_FACTOR_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>PROJECT_FACTOR_ID IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.ProjectFactor> fetchByProjectFactorId(Long... values) {
        return fetch(ProjectFactor.PROJECT_FACTOR.PROJECT_FACTOR_ID, values);
    }

    /**
     * Fetch a unique record that has <code>PROJECT_FACTOR_ID = value</code>
     */
    public org.jooq.generated.tables.pojos.ProjectFactor fetchOneByProjectFactorId(Long value) {
        return fetchOne(ProjectFactor.PROJECT_FACTOR.PROJECT_FACTOR_ID, value);
    }

    /**
     * Fetch a unique record that has <code>PROJECT_FACTOR_ID = value</code>
     */
    public Optional<org.jooq.generated.tables.pojos.ProjectFactor> fetchOptionalByProjectFactorId(Long value) {
        return fetchOptional(ProjectFactor.PROJECT_FACTOR.PROJECT_FACTOR_ID, value);
    }

    /**
     * Fetch records that have <code>PROJECT_ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.ProjectFactor> fetchRangeOfProjectId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(ProjectFactor.PROJECT_FACTOR.PROJECT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>PROJECT_ID IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.ProjectFactor> fetchByProjectId(Long... values) {
        return fetch(ProjectFactor.PROJECT_FACTOR.PROJECT_ID, values);
    }

    /**
     * Fetch records that have <code>UNIT_COST BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.ProjectFactor> fetchRangeOfUnitCost(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(ProjectFactor.PROJECT_FACTOR.UNIT_COST, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>UNIT_COST IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.ProjectFactor> fetchByUnitCost(Integer... values) {
        return fetch(ProjectFactor.PROJECT_FACTOR.UNIT_COST, values);
    }

    /**
     * Fetch records that have <code>TEAM_SIZE BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.ProjectFactor> fetchRangeOfTeamSize(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(ProjectFactor.PROJECT_FACTOR.TEAM_SIZE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>TEAM_SIZE IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.ProjectFactor> fetchByTeamSize(Integer... values) {
        return fetch(ProjectFactor.PROJECT_FACTOR.TEAM_SIZE, values);
    }

    /**
     * Fetch records that have <code>COCOMO_TYPE BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.ProjectFactor> fetchRangeOfCocomoType(String lowerInclusive, String upperInclusive) {
        return fetchRange(ProjectFactor.PROJECT_FACTOR.COCOMO_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>COCOMO_TYPE IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.ProjectFactor> fetchByCocomoType(String... values) {
        return fetch(ProjectFactor.PROJECT_FACTOR.COCOMO_TYPE, values);
    }

    /**
     * Fetch records that have <code>CREATED_AT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.ProjectFactor> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(ProjectFactor.PROJECT_FACTOR.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.ProjectFactor> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(ProjectFactor.PROJECT_FACTOR.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.ProjectFactor> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(ProjectFactor.PROJECT_FACTOR.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.ProjectFactor> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(ProjectFactor.PROJECT_FACTOR.UPDATED_AT, values);
    }
}
