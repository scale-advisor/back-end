/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.util.List;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.generated.tables.QrtzSchedulerState;
import org.jooq.generated.tables.records.QrtzSchedulerStateRecord;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QrtzSchedulerStateDao extends DAOImpl<QrtzSchedulerStateRecord, org.jooq.generated.tables.pojos.QrtzSchedulerState, Record2<String, String>> {

    /**
     * Create a new QrtzSchedulerStateDao without any configuration
     */
    public QrtzSchedulerStateDao() {
        super(QrtzSchedulerState.QRTZ_SCHEDULER_STATE, org.jooq.generated.tables.pojos.QrtzSchedulerState.class);
    }

    /**
     * Create a new QrtzSchedulerStateDao with an attached configuration
     */
    public QrtzSchedulerStateDao(Configuration configuration) {
        super(QrtzSchedulerState.QRTZ_SCHEDULER_STATE, org.jooq.generated.tables.pojos.QrtzSchedulerState.class, configuration);
    }

    @Override
    public Record2<String, String> getId(org.jooq.generated.tables.pojos.QrtzSchedulerState object) {
        return compositeKeyRecord(object.getSchedName(), object.getInstanceName());
    }

    /**
     * Fetch records that have <code>SCHED_NAME BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.QrtzSchedulerState> fetchRangeOfSchedName(String lowerInclusive, String upperInclusive) {
        return fetchRange(QrtzSchedulerState.QRTZ_SCHEDULER_STATE.SCHED_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>SCHED_NAME IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.QrtzSchedulerState> fetchBySchedName(String... values) {
        return fetch(QrtzSchedulerState.QRTZ_SCHEDULER_STATE.SCHED_NAME, values);
    }

    /**
     * Fetch records that have <code>INSTANCE_NAME BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.QrtzSchedulerState> fetchRangeOfInstanceName(String lowerInclusive, String upperInclusive) {
        return fetchRange(QrtzSchedulerState.QRTZ_SCHEDULER_STATE.INSTANCE_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>INSTANCE_NAME IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.QrtzSchedulerState> fetchByInstanceName(String... values) {
        return fetch(QrtzSchedulerState.QRTZ_SCHEDULER_STATE.INSTANCE_NAME, values);
    }

    /**
     * Fetch records that have <code>LAST_CHECKIN_TIME BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.QrtzSchedulerState> fetchRangeOfLastCheckinTime(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(QrtzSchedulerState.QRTZ_SCHEDULER_STATE.LAST_CHECKIN_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>LAST_CHECKIN_TIME IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.QrtzSchedulerState> fetchByLastCheckinTime(Long... values) {
        return fetch(QrtzSchedulerState.QRTZ_SCHEDULER_STATE.LAST_CHECKIN_TIME, values);
    }

    /**
     * Fetch records that have <code>CHECKIN_INTERVAL BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.QrtzSchedulerState> fetchRangeOfCheckinInterval(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(QrtzSchedulerState.QRTZ_SCHEDULER_STATE.CHECKIN_INTERVAL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CHECKIN_INTERVAL IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.QrtzSchedulerState> fetchByCheckinInterval(Long... values) {
        return fetch(QrtzSchedulerState.QRTZ_SCHEDULER_STATE.CHECKIN_INTERVAL, values);
    }
}
